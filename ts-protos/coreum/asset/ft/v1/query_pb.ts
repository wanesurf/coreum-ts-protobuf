// @generated by protoc-gen-es v2.0.0 with parameter "target=ts"
// @generated from file coreum/asset/ft/v1/query.proto (package coreum.asset.ft.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Params } from "./params_pb";
import { file_coreum_asset_ft_v1_params } from "./params_pb";
import type { DEXSettings, Token, TokenUpgradeStatuses } from "./token_pb";
import { file_coreum_asset_ft_v1_token } from "./token_pb";
import type { PageRequest, PageResponse } from "../../../../cosmos/base/query/v1beta1/pagination_pb";
import { file_cosmos_base_query_v1beta1_pagination } from "../../../../cosmos/base/query/v1beta1/pagination_pb";
import type { Coin } from "../../../../cosmos/base/v1beta1/coin_pb";
import { file_cosmos_base_v1beta1_coin } from "../../../../cosmos/base/v1beta1/coin_pb";
import { file_gogoproto_gogo } from "../../../../gogoproto/gogo_pb";
import { file_google_api_annotations } from "../../../../google/api/annotations_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file coreum/asset/ft/v1/query.proto.
 */
export const file_coreum_asset_ft_v1_query: GenFile = /*@__PURE__*/
  fileDesc("Ch5jb3JldW0vYXNzZXQvZnQvdjEvcXVlcnkucHJvdG8SEmNvcmV1bS5hc3NldC5mdC52MSIUChJRdWVyeVBhcmFtc1JlcXVlc3QiRwoTUXVlcnlQYXJhbXNSZXNwb25zZRIwCgZwYXJhbXMYASABKAsyGi5jb3JldW0uYXNzZXQuZnQudjEuUGFyYW1zQgTI3h8AIiIKEVF1ZXJ5VG9rZW5SZXF1ZXN0Eg0KBWRlbm9tGAEgASgJIkQKElF1ZXJ5VG9rZW5SZXNwb25zZRIuCgV0b2tlbhgBIAEoCzIZLmNvcmV1bS5hc3NldC5mdC52MS5Ub2tlbkIEyN4fACIxCiBRdWVyeVRva2VuVXBncmFkZVN0YXR1c2VzUmVxdWVzdBINCgVkZW5vbRgBIAEoCSJlCiFRdWVyeVRva2VuVXBncmFkZVN0YXR1c2VzUmVzcG9uc2USQAoIc3RhdHVzZXMYASABKAsyKC5jb3JldW0uYXNzZXQuZnQudjEuVG9rZW5VcGdyYWRlU3RhdHVzZXNCBMjeHwAiYAoSUXVlcnlUb2tlbnNSZXF1ZXN0EjoKCnBhZ2luYXRpb24YASABKAsyJi5jb3Ntb3MuYmFzZS5xdWVyeS52MWJldGExLlBhZ2VSZXF1ZXN0Eg4KBmlzc3VlchgCIAEoCSKDAQoTUXVlcnlUb2tlbnNSZXNwb25zZRI7CgpwYWdpbmF0aW9uGAEgASgLMicuY29zbW9zLmJhc2UucXVlcnkudjFiZXRhMS5QYWdlUmVzcG9uc2USLwoGdG9rZW5zGAIgAygLMhkuY29yZXVtLmFzc2V0LmZ0LnYxLlRva2VuQgTI3h8AIjUKE1F1ZXJ5QmFsYW5jZVJlcXVlc3QSDwoHYWNjb3VudBgBIAEoCRINCgVkZW5vbRgCIAEoCSLXAgoUUXVlcnlCYWxhbmNlUmVzcG9uc2USLgoHYmFsYW5jZRgBIAEoCUIdyN4fANreHxVjb3Ntb3NzZGsuaW8vbWF0aC5JbnQSMgoLd2hpdGVsaXN0ZWQYAiABKAlCHcjeHwDa3h8VY29zbW9zc2RrLmlvL21hdGguSW50Ei0KBmZyb3plbhgDIAEoCUIdyN4fANreHxVjb3Ntb3NzZGsuaW8vbWF0aC5JbnQSLQoGbG9ja2VkGAQgASgJQh3I3h8A2t4fFWNvc21vc3Nkay5pby9tYXRoLkludBI4ChFsb2NrZWRfaW5fdmVzdGluZxgFIAEoCUIdyN4fANreHxVjb3Ntb3NzZGsuaW8vbWF0aC5JbnQSQwoNbG9ja2VkX2luX2RleBgGIAEoCUIsyN4fANreHxVjb3Ntb3NzZGsuaW8vbWF0aC5JbnTi3h8LTG9ja2VkSW5ERVgiaQoaUXVlcnlGcm96ZW5CYWxhbmNlc1JlcXVlc3QSOgoKcGFnaW5hdGlvbhgBIAEoCzImLmNvc21vcy5iYXNlLnF1ZXJ5LnYxYmV0YTEuUGFnZVJlcXVlc3QSDwoHYWNjb3VudBgCIAEoCSK5AQobUXVlcnlGcm96ZW5CYWxhbmNlc1Jlc3BvbnNlEjsKCnBhZ2luYXRpb24YASABKAsyJy5jb3Ntb3MuYmFzZS5xdWVyeS52MWJldGExLlBhZ2VSZXNwb25zZRJdCghiYWxhbmNlcxgCIAMoCzIZLmNvc21vcy5iYXNlLnYxYmV0YTEuQ29pbkIwyN4fAKrfHyhnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3R5cGVzLkNvaW5zIjsKGVF1ZXJ5RnJvemVuQmFsYW5jZVJlcXVlc3QSDwoHYWNjb3VudBgBIAEoCRINCgVkZW5vbRgCIAEoCSJOChpRdWVyeUZyb3plbkJhbGFuY2VSZXNwb25zZRIwCgdiYWxhbmNlGAEgASgLMhkuY29zbW9zLmJhc2UudjFiZXRhMS5Db2luQgTI3h8AIm4KH1F1ZXJ5V2hpdGVsaXN0ZWRCYWxhbmNlc1JlcXVlc3QSOgoKcGFnaW5hdGlvbhgBIAEoCzImLmNvc21vcy5iYXNlLnF1ZXJ5LnYxYmV0YTEuUGFnZVJlcXVlc3QSDwoHYWNjb3VudBgCIAEoCSK+AQogUXVlcnlXaGl0ZWxpc3RlZEJhbGFuY2VzUmVzcG9uc2USOwoKcGFnaW5hdGlvbhgBIAEoCzInLmNvc21vcy5iYXNlLnF1ZXJ5LnYxYmV0YTEuUGFnZVJlc3BvbnNlEl0KCGJhbGFuY2VzGAIgAygLMhkuY29zbW9zLmJhc2UudjFiZXRhMS5Db2luQjDI3h8Aqt8fKGdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvdHlwZXMuQ29pbnMiQAoeUXVlcnlXaGl0ZWxpc3RlZEJhbGFuY2VSZXF1ZXN0Eg8KB2FjY291bnQYASABKAkSDQoFZGVub20YAiABKAkiUwofUXVlcnlXaGl0ZWxpc3RlZEJhbGFuY2VSZXNwb25zZRIwCgdiYWxhbmNlGAEgASgLMhkuY29zbW9zLmJhc2UudjFiZXRhMS5Db2luQgTI3h8AIigKF1F1ZXJ5REVYU2V0dGluZ3NSZXF1ZXN0Eg0KBWRlbm9tGAEgASgJImYKGFF1ZXJ5REVYU2V0dGluZ3NSZXNwb25zZRJKCgxkZXhfc2V0dGluZ3MYASABKAsyHy5jb3JldW0uYXNzZXQuZnQudjEuREVYU2V0dGluZ3NCE8jeHwDi3h8LREVYU2V0dGluZ3Mymw0KBVF1ZXJ5En0KBlBhcmFtcxImLmNvcmV1bS5hc3NldC5mdC52MS5RdWVyeVBhcmFtc1JlcXVlc3QaJy5jb3JldW0uYXNzZXQuZnQudjEuUXVlcnlQYXJhbXNSZXNwb25zZSIigtPkkwIcEhovY29yZXVtL2Fzc2V0L2Z0L3YxL3BhcmFtcxJ9CgZUb2tlbnMSJi5jb3JldW0uYXNzZXQuZnQudjEuUXVlcnlUb2tlbnNSZXF1ZXN0GicuY29yZXVtLmFzc2V0LmZ0LnYxLlF1ZXJ5VG9rZW5zUmVzcG9uc2UiIoLT5JMCHBIaL2NvcmV1bS9hc3NldC9mdC92MS90b2tlbnMSggEKBVRva2VuEiUuY29yZXVtLmFzc2V0LmZ0LnYxLlF1ZXJ5VG9rZW5SZXF1ZXN0GiYuY29yZXVtLmFzc2V0LmZ0LnYxLlF1ZXJ5VG9rZW5SZXNwb25zZSIqgtPkkwIkEiIvY29yZXVtL2Fzc2V0L2Z0L3YxL3Rva2Vucy97ZGVub219EsABChRUb2tlblVwZ3JhZGVTdGF0dXNlcxI0LmNvcmV1bS5hc3NldC5mdC52MS5RdWVyeVRva2VuVXBncmFkZVN0YXR1c2VzUmVxdWVzdBo1LmNvcmV1bS5hc3NldC5mdC52MS5RdWVyeVRva2VuVXBncmFkZVN0YXR1c2VzUmVzcG9uc2UiO4LT5JMCNRIzL2NvcmV1bS9hc3NldC9mdC92MS90b2tlbnMve2Rlbm9tfS91cGdyYWRlLXN0YXR1c2VzEqUBCgdCYWxhbmNlEicuY29yZXVtLmFzc2V0LmZ0LnYxLlF1ZXJ5QmFsYW5jZVJlcXVlc3QaKC5jb3JldW0uYXNzZXQuZnQudjEuUXVlcnlCYWxhbmNlUmVzcG9uc2UiR4LT5JMCQRI/L2NvcmV1bS9hc3NldC9mdC92MS9hY2NvdW50cy97YWNjb3VudH0vYmFsYW5jZXMvc3VtbWFyeS97ZGVub219ErEBCg5Gcm96ZW5CYWxhbmNlcxIuLmNvcmV1bS5hc3NldC5mdC52MS5RdWVyeUZyb3plbkJhbGFuY2VzUmVxdWVzdBovLmNvcmV1bS5hc3NldC5mdC52MS5RdWVyeUZyb3plbkJhbGFuY2VzUmVzcG9uc2UiPoLT5JMCOBI2L2NvcmV1bS9hc3NldC9mdC92MS9hY2NvdW50cy97YWNjb3VudH0vYmFsYW5jZXMvZnJvemVuErYBCg1Gcm96ZW5CYWxhbmNlEi0uY29yZXVtLmFzc2V0LmZ0LnYxLlF1ZXJ5RnJvemVuQmFsYW5jZVJlcXVlc3QaLi5jb3JldW0uYXNzZXQuZnQudjEuUXVlcnlGcm96ZW5CYWxhbmNlUmVzcG9uc2UiRoLT5JMCQBI+L2NvcmV1bS9hc3NldC9mdC92MS9hY2NvdW50cy97YWNjb3VudH0vYmFsYW5jZXMvZnJvemVuL3tkZW5vbX0SxQEKE1doaXRlbGlzdGVkQmFsYW5jZXMSMy5jb3JldW0uYXNzZXQuZnQudjEuUXVlcnlXaGl0ZWxpc3RlZEJhbGFuY2VzUmVxdWVzdBo0LmNvcmV1bS5hc3NldC5mdC52MS5RdWVyeVdoaXRlbGlzdGVkQmFsYW5jZXNSZXNwb25zZSJDgtPkkwI9EjsvY29yZXVtL2Fzc2V0L2Z0L3YxL2FjY291bnRzL3thY2NvdW50fS9iYWxhbmNlcy93aGl0ZWxpc3RlZBLKAQoSV2hpdGVsaXN0ZWRCYWxhbmNlEjIuY29yZXVtLmFzc2V0LmZ0LnYxLlF1ZXJ5V2hpdGVsaXN0ZWRCYWxhbmNlUmVxdWVzdBozLmNvcmV1bS5hc3NldC5mdC52MS5RdWVyeVdoaXRlbGlzdGVkQmFsYW5jZVJlc3BvbnNlIkuC0+STAkUSQy9jb3JldW0vYXNzZXQvZnQvdjEvYWNjb3VudHMve2FjY291bnR9L2JhbGFuY2VzL3doaXRlbGlzdGVkL3tkZW5vbX0SoQEKC0RFWFNldHRpbmdzEisuY29yZXVtLmFzc2V0LmZ0LnYxLlF1ZXJ5REVYU2V0dGluZ3NSZXF1ZXN0GiwuY29yZXVtLmFzc2V0LmZ0LnYxLlF1ZXJ5REVYU2V0dGluZ3NSZXNwb25zZSI3gtPkkwIxEi8vY29yZXVtL2Fzc2V0L2Z0L3YxL3Rva2Vucy97ZGVub219L2RleC1zZXR0aW5nc0I4WjZnaXRodWIuY29tL0NvcmV1bUZvdW5kYXRpb24vY29yZXVtL3Y0L3gvYXNzZXQvZnQvdHlwZXNiBnByb3RvMw", [file_coreum_asset_ft_v1_params, file_coreum_asset_ft_v1_token, file_cosmos_base_query_v1beta1_pagination, file_cosmos_base_v1beta1_coin, file_gogoproto_gogo, file_google_api_annotations]);

/**
 * QueryParamsRequest defines the request type for querying x/asset/ft parameters.
 *
 * @generated from message coreum.asset.ft.v1.QueryParamsRequest
 */
export type QueryParamsRequest = Message<"coreum.asset.ft.v1.QueryParamsRequest"> & {
};

/**
 * Describes the message coreum.asset.ft.v1.QueryParamsRequest.
 * Use `create(QueryParamsRequestSchema)` to create a new message.
 */
export const QueryParamsRequestSchema: GenMessage<QueryParamsRequest> = /*@__PURE__*/
  messageDesc(file_coreum_asset_ft_v1_query, 0);

/**
 * QueryParamsResponse defines the response type for querying x/asset/ft parameters.
 *
 * @generated from message coreum.asset.ft.v1.QueryParamsResponse
 */
export type QueryParamsResponse = Message<"coreum.asset.ft.v1.QueryParamsResponse"> & {
  /**
   * @generated from field: coreum.asset.ft.v1.Params params = 1;
   */
  params?: Params;
};

/**
 * Describes the message coreum.asset.ft.v1.QueryParamsResponse.
 * Use `create(QueryParamsResponseSchema)` to create a new message.
 */
export const QueryParamsResponseSchema: GenMessage<QueryParamsResponse> = /*@__PURE__*/
  messageDesc(file_coreum_asset_ft_v1_query, 1);

/**
 * @generated from message coreum.asset.ft.v1.QueryTokenRequest
 */
export type QueryTokenRequest = Message<"coreum.asset.ft.v1.QueryTokenRequest"> & {
  /**
   * @generated from field: string denom = 1;
   */
  denom: string;
};

/**
 * Describes the message coreum.asset.ft.v1.QueryTokenRequest.
 * Use `create(QueryTokenRequestSchema)` to create a new message.
 */
export const QueryTokenRequestSchema: GenMessage<QueryTokenRequest> = /*@__PURE__*/
  messageDesc(file_coreum_asset_ft_v1_query, 2);

/**
 * @generated from message coreum.asset.ft.v1.QueryTokenResponse
 */
export type QueryTokenResponse = Message<"coreum.asset.ft.v1.QueryTokenResponse"> & {
  /**
   * @generated from field: coreum.asset.ft.v1.Token token = 1;
   */
  token?: Token;
};

/**
 * Describes the message coreum.asset.ft.v1.QueryTokenResponse.
 * Use `create(QueryTokenResponseSchema)` to create a new message.
 */
export const QueryTokenResponseSchema: GenMessage<QueryTokenResponse> = /*@__PURE__*/
  messageDesc(file_coreum_asset_ft_v1_query, 3);

/**
 * @generated from message coreum.asset.ft.v1.QueryTokenUpgradeStatusesRequest
 */
export type QueryTokenUpgradeStatusesRequest = Message<"coreum.asset.ft.v1.QueryTokenUpgradeStatusesRequest"> & {
  /**
   * @generated from field: string denom = 1;
   */
  denom: string;
};

/**
 * Describes the message coreum.asset.ft.v1.QueryTokenUpgradeStatusesRequest.
 * Use `create(QueryTokenUpgradeStatusesRequestSchema)` to create a new message.
 */
export const QueryTokenUpgradeStatusesRequestSchema: GenMessage<QueryTokenUpgradeStatusesRequest> = /*@__PURE__*/
  messageDesc(file_coreum_asset_ft_v1_query, 4);

/**
 * @generated from message coreum.asset.ft.v1.QueryTokenUpgradeStatusesResponse
 */
export type QueryTokenUpgradeStatusesResponse = Message<"coreum.asset.ft.v1.QueryTokenUpgradeStatusesResponse"> & {
  /**
   * @generated from field: coreum.asset.ft.v1.TokenUpgradeStatuses statuses = 1;
   */
  statuses?: TokenUpgradeStatuses;
};

/**
 * Describes the message coreum.asset.ft.v1.QueryTokenUpgradeStatusesResponse.
 * Use `create(QueryTokenUpgradeStatusesResponseSchema)` to create a new message.
 */
export const QueryTokenUpgradeStatusesResponseSchema: GenMessage<QueryTokenUpgradeStatusesResponse> = /*@__PURE__*/
  messageDesc(file_coreum_asset_ft_v1_query, 5);

/**
 * @generated from message coreum.asset.ft.v1.QueryTokensRequest
 */
export type QueryTokensRequest = Message<"coreum.asset.ft.v1.QueryTokensRequest"> & {
  /**
   * pagination defines an optional pagination for the request.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;

  /**
   * @generated from field: string issuer = 2;
   */
  issuer: string;
};

/**
 * Describes the message coreum.asset.ft.v1.QueryTokensRequest.
 * Use `create(QueryTokensRequestSchema)` to create a new message.
 */
export const QueryTokensRequestSchema: GenMessage<QueryTokensRequest> = /*@__PURE__*/
  messageDesc(file_coreum_asset_ft_v1_query, 6);

/**
 * @generated from message coreum.asset.ft.v1.QueryTokensResponse
 */
export type QueryTokensResponse = Message<"coreum.asset.ft.v1.QueryTokensResponse"> & {
  /**
   * pagination defines the pagination in the response.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 1;
   */
  pagination?: PageResponse;

  /**
   * @generated from field: repeated coreum.asset.ft.v1.Token tokens = 2;
   */
  tokens: Token[];
};

/**
 * Describes the message coreum.asset.ft.v1.QueryTokensResponse.
 * Use `create(QueryTokensResponseSchema)` to create a new message.
 */
export const QueryTokensResponseSchema: GenMessage<QueryTokensResponse> = /*@__PURE__*/
  messageDesc(file_coreum_asset_ft_v1_query, 7);

/**
 * @generated from message coreum.asset.ft.v1.QueryBalanceRequest
 */
export type QueryBalanceRequest = Message<"coreum.asset.ft.v1.QueryBalanceRequest"> & {
  /**
   * account specifies the account onto which we query balances
   *
   * @generated from field: string account = 1;
   */
  account: string;

  /**
   * denom specifies balances on a specific denom
   *
   * @generated from field: string denom = 2;
   */
  denom: string;
};

/**
 * Describes the message coreum.asset.ft.v1.QueryBalanceRequest.
 * Use `create(QueryBalanceRequestSchema)` to create a new message.
 */
export const QueryBalanceRequestSchema: GenMessage<QueryBalanceRequest> = /*@__PURE__*/
  messageDesc(file_coreum_asset_ft_v1_query, 8);

/**
 * @generated from message coreum.asset.ft.v1.QueryBalanceResponse
 */
export type QueryBalanceResponse = Message<"coreum.asset.ft.v1.QueryBalanceResponse"> & {
  /**
   * balance contains the balance with the queried account and denom
   *
   * @generated from field: string balance = 1;
   */
  balance: string;

  /**
   * whitelisted is the whitelisted amount of the denom on the account.
   *
   * @generated from field: string whitelisted = 2;
   */
  whitelisted: string;

  /**
   * frozen is the frozen amount of the denom on the account.
   *
   * @generated from field: string frozen = 3;
   */
  frozen: string;

  /**
   * locked is the balance locked in vesting and DEX.
   *
   * @generated from field: string locked = 4;
   */
  locked: string;

  /**
   * locked_in_vesting is the balance locked in bank vesting.
   *
   * @generated from field: string locked_in_vesting = 5;
   */
  lockedInVesting: string;

  /**
   * locked_in_dex is the balance locked in DEX.
   *
   * @generated from field: string locked_in_dex = 6;
   */
  lockedInDex: string;
};

/**
 * Describes the message coreum.asset.ft.v1.QueryBalanceResponse.
 * Use `create(QueryBalanceResponseSchema)` to create a new message.
 */
export const QueryBalanceResponseSchema: GenMessage<QueryBalanceResponse> = /*@__PURE__*/
  messageDesc(file_coreum_asset_ft_v1_query, 9);

/**
 * @generated from message coreum.asset.ft.v1.QueryFrozenBalancesRequest
 */
export type QueryFrozenBalancesRequest = Message<"coreum.asset.ft.v1.QueryFrozenBalancesRequest"> & {
  /**
   * pagination defines an optional pagination for the request.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;

  /**
   * account specifies the account onto which we query frozen balances
   *
   * @generated from field: string account = 2;
   */
  account: string;
};

/**
 * Describes the message coreum.asset.ft.v1.QueryFrozenBalancesRequest.
 * Use `create(QueryFrozenBalancesRequestSchema)` to create a new message.
 */
export const QueryFrozenBalancesRequestSchema: GenMessage<QueryFrozenBalancesRequest> = /*@__PURE__*/
  messageDesc(file_coreum_asset_ft_v1_query, 10);

/**
 * @generated from message coreum.asset.ft.v1.QueryFrozenBalancesResponse
 */
export type QueryFrozenBalancesResponse = Message<"coreum.asset.ft.v1.QueryFrozenBalancesResponse"> & {
  /**
   * pagination defines the pagination in the response.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 1;
   */
  pagination?: PageResponse;

  /**
   * balances contains the frozen balances on the queried account
   *
   * @generated from field: repeated cosmos.base.v1beta1.Coin balances = 2;
   */
  balances: Coin[];
};

/**
 * Describes the message coreum.asset.ft.v1.QueryFrozenBalancesResponse.
 * Use `create(QueryFrozenBalancesResponseSchema)` to create a new message.
 */
export const QueryFrozenBalancesResponseSchema: GenMessage<QueryFrozenBalancesResponse> = /*@__PURE__*/
  messageDesc(file_coreum_asset_ft_v1_query, 11);

/**
 * @generated from message coreum.asset.ft.v1.QueryFrozenBalanceRequest
 */
export type QueryFrozenBalanceRequest = Message<"coreum.asset.ft.v1.QueryFrozenBalanceRequest"> & {
  /**
   * account specifies the account onto which we query frozen balances
   *
   * @generated from field: string account = 1;
   */
  account: string;

  /**
   * denom specifies frozen balances on a specific denom
   *
   * @generated from field: string denom = 2;
   */
  denom: string;
};

/**
 * Describes the message coreum.asset.ft.v1.QueryFrozenBalanceRequest.
 * Use `create(QueryFrozenBalanceRequestSchema)` to create a new message.
 */
export const QueryFrozenBalanceRequestSchema: GenMessage<QueryFrozenBalanceRequest> = /*@__PURE__*/
  messageDesc(file_coreum_asset_ft_v1_query, 12);

/**
 * @generated from message coreum.asset.ft.v1.QueryFrozenBalanceResponse
 */
export type QueryFrozenBalanceResponse = Message<"coreum.asset.ft.v1.QueryFrozenBalanceResponse"> & {
  /**
   * balance contains the frozen balance with the queried account and denom
   *
   * @generated from field: cosmos.base.v1beta1.Coin balance = 1;
   */
  balance?: Coin;
};

/**
 * Describes the message coreum.asset.ft.v1.QueryFrozenBalanceResponse.
 * Use `create(QueryFrozenBalanceResponseSchema)` to create a new message.
 */
export const QueryFrozenBalanceResponseSchema: GenMessage<QueryFrozenBalanceResponse> = /*@__PURE__*/
  messageDesc(file_coreum_asset_ft_v1_query, 13);

/**
 * @generated from message coreum.asset.ft.v1.QueryWhitelistedBalancesRequest
 */
export type QueryWhitelistedBalancesRequest = Message<"coreum.asset.ft.v1.QueryWhitelistedBalancesRequest"> & {
  /**
   * pagination defines an optional pagination for the request.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;

  /**
   * account specifies the account onto which we query whitelisted balances
   *
   * @generated from field: string account = 2;
   */
  account: string;
};

/**
 * Describes the message coreum.asset.ft.v1.QueryWhitelistedBalancesRequest.
 * Use `create(QueryWhitelistedBalancesRequestSchema)` to create a new message.
 */
export const QueryWhitelistedBalancesRequestSchema: GenMessage<QueryWhitelistedBalancesRequest> = /*@__PURE__*/
  messageDesc(file_coreum_asset_ft_v1_query, 14);

/**
 * @generated from message coreum.asset.ft.v1.QueryWhitelistedBalancesResponse
 */
export type QueryWhitelistedBalancesResponse = Message<"coreum.asset.ft.v1.QueryWhitelistedBalancesResponse"> & {
  /**
   * pagination defines the pagination in the response.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 1;
   */
  pagination?: PageResponse;

  /**
   * balances contains the whitelisted balances on the queried account
   *
   * @generated from field: repeated cosmos.base.v1beta1.Coin balances = 2;
   */
  balances: Coin[];
};

/**
 * Describes the message coreum.asset.ft.v1.QueryWhitelistedBalancesResponse.
 * Use `create(QueryWhitelistedBalancesResponseSchema)` to create a new message.
 */
export const QueryWhitelistedBalancesResponseSchema: GenMessage<QueryWhitelistedBalancesResponse> = /*@__PURE__*/
  messageDesc(file_coreum_asset_ft_v1_query, 15);

/**
 * @generated from message coreum.asset.ft.v1.QueryWhitelistedBalanceRequest
 */
export type QueryWhitelistedBalanceRequest = Message<"coreum.asset.ft.v1.QueryWhitelistedBalanceRequest"> & {
  /**
   * account specifies the account onto which we query whitelisted balances
   *
   * @generated from field: string account = 1;
   */
  account: string;

  /**
   * denom specifies whitelisted balances on a specific denom
   *
   * @generated from field: string denom = 2;
   */
  denom: string;
};

/**
 * Describes the message coreum.asset.ft.v1.QueryWhitelistedBalanceRequest.
 * Use `create(QueryWhitelistedBalanceRequestSchema)` to create a new message.
 */
export const QueryWhitelistedBalanceRequestSchema: GenMessage<QueryWhitelistedBalanceRequest> = /*@__PURE__*/
  messageDesc(file_coreum_asset_ft_v1_query, 16);

/**
 * @generated from message coreum.asset.ft.v1.QueryWhitelistedBalanceResponse
 */
export type QueryWhitelistedBalanceResponse = Message<"coreum.asset.ft.v1.QueryWhitelistedBalanceResponse"> & {
  /**
   * balance contains the whitelisted balance with the queried account and denom
   *
   * @generated from field: cosmos.base.v1beta1.Coin balance = 1;
   */
  balance?: Coin;
};

/**
 * Describes the message coreum.asset.ft.v1.QueryWhitelistedBalanceResponse.
 * Use `create(QueryWhitelistedBalanceResponseSchema)` to create a new message.
 */
export const QueryWhitelistedBalanceResponseSchema: GenMessage<QueryWhitelistedBalanceResponse> = /*@__PURE__*/
  messageDesc(file_coreum_asset_ft_v1_query, 17);

/**
 * @generated from message coreum.asset.ft.v1.QueryDEXSettingsRequest
 */
export type QueryDEXSettingsRequest = Message<"coreum.asset.ft.v1.QueryDEXSettingsRequest"> & {
  /**
   * denom specifies the denom onto which we query DEX settings
   *
   * @generated from field: string denom = 1;
   */
  denom: string;
};

/**
 * Describes the message coreum.asset.ft.v1.QueryDEXSettingsRequest.
 * Use `create(QueryDEXSettingsRequestSchema)` to create a new message.
 */
export const QueryDEXSettingsRequestSchema: GenMessage<QueryDEXSettingsRequest> = /*@__PURE__*/
  messageDesc(file_coreum_asset_ft_v1_query, 18);

/**
 * @generated from message coreum.asset.ft.v1.QueryDEXSettingsResponse
 */
export type QueryDEXSettingsResponse = Message<"coreum.asset.ft.v1.QueryDEXSettingsResponse"> & {
  /**
   * dex_settings contains the DEX settings
   *
   * @generated from field: coreum.asset.ft.v1.DEXSettings dex_settings = 1;
   */
  dexSettings?: DEXSettings;
};

/**
 * Describes the message coreum.asset.ft.v1.QueryDEXSettingsResponse.
 * Use `create(QueryDEXSettingsResponseSchema)` to create a new message.
 */
export const QueryDEXSettingsResponseSchema: GenMessage<QueryDEXSettingsResponse> = /*@__PURE__*/
  messageDesc(file_coreum_asset_ft_v1_query, 19);

/**
 * Query defines the gRPC querier service.
 *
 * @generated from service coreum.asset.ft.v1.Query
 */
export const Query: GenService<{
  /**
   * Params queries the parameters of x/asset/ft module.
   *
   * @generated from rpc coreum.asset.ft.v1.Query.Params
   */
  params: {
    methodKind: "unary";
    input: typeof QueryParamsRequestSchema;
    output: typeof QueryParamsResponseSchema;
  },
  /**
   * Tokens queries the fungible tokens of the module.
   *
   * @generated from rpc coreum.asset.ft.v1.Query.Tokens
   */
  tokens: {
    methodKind: "unary";
    input: typeof QueryTokensRequestSchema;
    output: typeof QueryTokensResponseSchema;
  },
  /**
   * Token queries the fungible token of the module.
   *
   * @generated from rpc coreum.asset.ft.v1.Query.Token
   */
  token: {
    methodKind: "unary";
    input: typeof QueryTokenRequestSchema;
    output: typeof QueryTokenResponseSchema;
  },
  /**
   * TokenUpgradeStatuses returns token upgrades info.
   *
   * @generated from rpc coreum.asset.ft.v1.Query.TokenUpgradeStatuses
   */
  tokenUpgradeStatuses: {
    methodKind: "unary";
    input: typeof QueryTokenUpgradeStatusesRequestSchema;
    output: typeof QueryTokenUpgradeStatusesResponseSchema;
  },
  /**
   * Balance returns balance of the denom for the account.
   *
   * @generated from rpc coreum.asset.ft.v1.Query.Balance
   */
  balance: {
    methodKind: "unary";
    input: typeof QueryBalanceRequestSchema;
    output: typeof QueryBalanceResponseSchema;
  },
  /**
   * FrozenBalances returns all the frozen balances for the account.
   *
   * @generated from rpc coreum.asset.ft.v1.Query.FrozenBalances
   */
  frozenBalances: {
    methodKind: "unary";
    input: typeof QueryFrozenBalancesRequestSchema;
    output: typeof QueryFrozenBalancesResponseSchema;
  },
  /**
   * FrozenBalance returns frozen balance of the denom for the account.
   *
   * @generated from rpc coreum.asset.ft.v1.Query.FrozenBalance
   */
  frozenBalance: {
    methodKind: "unary";
    input: typeof QueryFrozenBalanceRequestSchema;
    output: typeof QueryFrozenBalanceResponseSchema;
  },
  /**
   * WhitelistedBalances returns all the whitelisted balances for the account.
   *
   * @generated from rpc coreum.asset.ft.v1.Query.WhitelistedBalances
   */
  whitelistedBalances: {
    methodKind: "unary";
    input: typeof QueryWhitelistedBalancesRequestSchema;
    output: typeof QueryWhitelistedBalancesResponseSchema;
  },
  /**
   * WhitelistedBalance returns whitelisted balance of the denom for the account.
   *
   * @generated from rpc coreum.asset.ft.v1.Query.WhitelistedBalance
   */
  whitelistedBalance: {
    methodKind: "unary";
    input: typeof QueryWhitelistedBalanceRequestSchema;
    output: typeof QueryWhitelistedBalanceResponseSchema;
  },
  /**
   * DEXSettings returns DEX settings of the denom.
   *
   * @generated from rpc coreum.asset.ft.v1.Query.DEXSettings
   */
  dEXSettings: {
    methodKind: "unary";
    input: typeof QueryDEXSettingsRequestSchema;
    output: typeof QueryDEXSettingsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_coreum_asset_ft_v1_query, 0);

