// @generated by protoc-gen-es v2.0.0 with parameter "target=ts"
// @generated from file coreum/asset/nft/v1/tx.proto (package coreum.asset.nft.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_amino_amino } from "../../../../amino/amino_pb";
import type { ClassFeature } from "./nft_pb";
import { file_coreum_asset_nft_v1_nft } from "./nft_pb";
import type { Params } from "./params_pb";
import { file_coreum_asset_nft_v1_params } from "./params_pb";
import type { DataDynamicIndexedItem } from "./types_pb";
import { file_coreum_asset_nft_v1_types } from "./types_pb";
import { file_cosmos_msg_v1_msg } from "../../../../cosmos/msg/v1/msg_pb";
import { file_cosmos_proto_cosmos } from "../../../../cosmos_proto/cosmos_pb";
import { file_gogoproto_gogo } from "../../../../gogoproto/gogo_pb";
import type { Any } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file coreum/asset/nft/v1/tx.proto.
 */
export const file_coreum_asset_nft_v1_tx: GenFile = /*@__PURE__*/
  fileDesc("Chxjb3JldW0vYXNzZXQvbmZ0L3YxL3R4LnByb3RvEhNjb3JldW0uYXNzZXQubmZ0LnYxIt0CCg1Nc2dJc3N1ZUNsYXNzEigKBmlzc3VlchgBIAEoCUIY0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nEg4KBnN5bWJvbBgCIAEoCRIMCgRuYW1lGAMgASgJEhMKC2Rlc2NyaXB0aW9uGAQgASgJEhQKA3VyaRgFIAEoCUIH4t4fA1VSSRIdCgh1cmlfaGFzaBgGIAEoCUIL4t4fB1VSSUhhc2gSIgoEZGF0YRgHIAEoCzIULmdvb2dsZS5wcm90b2J1Zi5BbnkSMwoIZmVhdHVyZXMYCCADKA4yIS5jb3JldW0uYXNzZXQubmZ0LnYxLkNsYXNzRmVhdHVyZRI5Cgxyb3lhbHR5X3JhdGUYCSABKAlCI8jeHwDa3h8bY29zbW9zc2RrLmlvL21hdGguTGVnYWN5RGVjOiaC57AqBmlzc3VlcornsCoWYXNzZXRuZnQvTXNnSXNzdWVDbGFzcyL0AQoHTXNnTWludBIoCgZzZW5kZXIYASABKAlCGNK0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZxIdCghjbGFzc19pZBgCIAEoCUIL4t4fB0NsYXNzSUQSEgoCaWQYAyABKAlCBuLeHwJJRBIUCgN1cmkYBCABKAlCB+LeHwNVUkkSHQoIdXJpX2hhc2gYBSABKAlCC+LeHwdVUklIYXNoEiIKBGRhdGEYBiABKAsyFC5nb29nbGUucHJvdG9idWYuQW55EhEKCXJlY2lwaWVudBgHIAEoCTogguewKgZzZW5kZXKK57AqEGFzc2V0bmZ0L01zZ01pbnQi1gEKDU1zZ1VwZGF0ZURhdGESKAoGc2VuZGVyGAEgASgJQhjStC0UY29zbW9zLkFkZHJlc3NTdHJpbmcSHQoIY2xhc3NfaWQYAiABKAlCC+LeHwdDbGFzc0lEEhIKAmlkGAMgASgJQgbi3h8CSUQSQAoFaXRlbXMYBCADKAsyKy5jb3JldW0uYXNzZXQubmZ0LnYxLkRhdGFEeW5hbWljSW5kZXhlZEl0ZW1CBMjeHwA6JoLnsCoGc2VuZGVyiuewKhZhc3NldG5mdC9Nc2dVcGRhdGVEYXRhIogBCgdNc2dCdXJuEigKBnNlbmRlchgBIAEoCUIY0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nEh0KCGNsYXNzX2lkGAIgASgJQgvi3h8HQ2xhc3NJRBISCgJpZBgDIAEoCUIG4t4fAklEOiCC57AqBnNlbmRlcornsCoQYXNzZXRuZnQvTXNnQnVybiKMAQoJTXNnRnJlZXplEigKBnNlbmRlchgBIAEoCUIY0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nEh0KCGNsYXNzX2lkGAIgASgJQgvi3h8HQ2xhc3NJRBISCgJpZBgDIAEoCUIG4t4fAklEOiKC57AqBnNlbmRlcornsCoSYXNzZXRuZnQvTXNnRnJlZXplIpABCgtNc2dVbmZyZWV6ZRIoCgZzZW5kZXIYASABKAlCGNK0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZxIdCghjbGFzc19pZBgCIAEoCUIL4t4fB0NsYXNzSUQSEgoCaWQYAyABKAlCBuLeHwJJRDokguewKgZzZW5kZXKK57AqFGFzc2V0bmZ0L01zZ1VuZnJlZXplIq0BCg5Nc2dDbGFzc0ZyZWV6ZRIoCgZzZW5kZXIYASABKAlCGNK0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZxIdCghjbGFzc19pZBgCIAEoCUIL4t4fB0NsYXNzSUQSKQoHYWNjb3VudBgDIAEoCUIY0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nOieC57AqBnNlbmRlcornsCoXYXNzZXRuZnQvTXNnQ2xhc3NGcmVlemUisQEKEE1zZ0NsYXNzVW5mcmVlemUSKAoGc2VuZGVyGAEgASgJQhjStC0UY29zbW9zLkFkZHJlc3NTdHJpbmcSHQoIY2xhc3NfaWQYAiABKAlCC+LeHwdDbGFzc0lEEikKB2FjY291bnQYAyABKAlCGNK0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZzopguewKgZzZW5kZXKK57AqGWFzc2V0bmZ0L01zZ0NsYXNzVW5mcmVlemUirQEKEU1zZ0FkZFRvV2hpdGVsaXN0EigKBnNlbmRlchgBIAEoCUIY0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nEh0KCGNsYXNzX2lkGAIgASgJQgvi3h8HQ2xhc3NJRBISCgJpZBgDIAEoCUIG4t4fAklEEg8KB2FjY291bnQYBCABKAk6KoLnsCoGc2VuZGVyiuewKhphc3NldG5mdC9Nc2dBZGRUb1doaXRlbGlzdCK3AQoWTXNnUmVtb3ZlRnJvbVdoaXRlbGlzdBIoCgZzZW5kZXIYASABKAlCGNK0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZxIdCghjbGFzc19pZBgCIAEoCUIL4t4fB0NsYXNzSUQSEgoCaWQYAyABKAlCBuLeHwJJRBIPCgdhY2NvdW50GAQgASgJOi+C57AqBnNlbmRlcornsCofYXNzZXRuZnQvTXNnUmVtb3ZlRnJvbVdoaXRlbGlzdCKjAQoWTXNnQWRkVG9DbGFzc1doaXRlbGlzdBIoCgZzZW5kZXIYASABKAlCGNK0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZxIdCghjbGFzc19pZBgCIAEoCUIL4t4fB0NsYXNzSUQSDwoHYWNjb3VudBgDIAEoCTovguewKgZzZW5kZXKK57AqH2Fzc2V0bmZ0L01zZ0FkZFRvQ2xhc3NXaGl0ZWxpc3QirQEKG01zZ1JlbW92ZUZyb21DbGFzc1doaXRlbGlzdBIoCgZzZW5kZXIYASABKAlCGNK0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZxIdCghjbGFzc19pZBgCIAEoCUIL4t4fB0NsYXNzSUQSDwoHYWNjb3VudBgDIAEoCTo0guewKgZzZW5kZXKK57AqJGFzc2V0bmZ0L01zZ1JlbW92ZUZyb21DbGFzc1doaXRlbGlzdCKeAQoPTXNnVXBkYXRlUGFyYW1zEisKCWF1dGhvcml0eRgBIAEoCUIY0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nEjEKBnBhcmFtcxgCIAEoCzIbLmNvcmV1bS5hc3NldC5uZnQudjEuUGFyYW1zQgTI3h8AOiuC57AqCWF1dGhvcml0eYrnsCoYYXNzZXRuZnQvTXNnVXBkYXRlUGFyYW1zIg8KDUVtcHR5UmVzcG9uc2UymgkKA01zZxJUCgpJc3N1ZUNsYXNzEiIuY29yZXVtLmFzc2V0Lm5mdC52MS5Nc2dJc3N1ZUNsYXNzGiIuY29yZXVtLmFzc2V0Lm5mdC52MS5FbXB0eVJlc3BvbnNlEkgKBE1pbnQSHC5jb3JldW0uYXNzZXQubmZ0LnYxLk1zZ01pbnQaIi5jb3JldW0uYXNzZXQubmZ0LnYxLkVtcHR5UmVzcG9uc2USVAoKVXBkYXRlRGF0YRIiLmNvcmV1bS5hc3NldC5uZnQudjEuTXNnVXBkYXRlRGF0YRoiLmNvcmV1bS5hc3NldC5uZnQudjEuRW1wdHlSZXNwb25zZRJICgRCdXJuEhwuY29yZXVtLmFzc2V0Lm5mdC52MS5Nc2dCdXJuGiIuY29yZXVtLmFzc2V0Lm5mdC52MS5FbXB0eVJlc3BvbnNlEkwKBkZyZWV6ZRIeLmNvcmV1bS5hc3NldC5uZnQudjEuTXNnRnJlZXplGiIuY29yZXVtLmFzc2V0Lm5mdC52MS5FbXB0eVJlc3BvbnNlElAKCFVuZnJlZXplEiAuY29yZXVtLmFzc2V0Lm5mdC52MS5Nc2dVbmZyZWV6ZRoiLmNvcmV1bS5hc3NldC5uZnQudjEuRW1wdHlSZXNwb25zZRJcCg5BZGRUb1doaXRlbGlzdBImLmNvcmV1bS5hc3NldC5uZnQudjEuTXNnQWRkVG9XaGl0ZWxpc3QaIi5jb3JldW0uYXNzZXQubmZ0LnYxLkVtcHR5UmVzcG9uc2USZgoTUmVtb3ZlRnJvbVdoaXRlbGlzdBIrLmNvcmV1bS5hc3NldC5uZnQudjEuTXNnUmVtb3ZlRnJvbVdoaXRlbGlzdBoiLmNvcmV1bS5hc3NldC5uZnQudjEuRW1wdHlSZXNwb25zZRJmChNBZGRUb0NsYXNzV2hpdGVsaXN0EisuY29yZXVtLmFzc2V0Lm5mdC52MS5Nc2dBZGRUb0NsYXNzV2hpdGVsaXN0GiIuY29yZXVtLmFzc2V0Lm5mdC52MS5FbXB0eVJlc3BvbnNlEnAKGFJlbW92ZUZyb21DbGFzc1doaXRlbGlzdBIwLmNvcmV1bS5hc3NldC5uZnQudjEuTXNnUmVtb3ZlRnJvbUNsYXNzV2hpdGVsaXN0GiIuY29yZXVtLmFzc2V0Lm5mdC52MS5FbXB0eVJlc3BvbnNlElYKC0NsYXNzRnJlZXplEiMuY29yZXVtLmFzc2V0Lm5mdC52MS5Nc2dDbGFzc0ZyZWV6ZRoiLmNvcmV1bS5hc3NldC5uZnQudjEuRW1wdHlSZXNwb25zZRJaCg1DbGFzc1VuZnJlZXplEiUuY29yZXVtLmFzc2V0Lm5mdC52MS5Nc2dDbGFzc1VuZnJlZXplGiIuY29yZXVtLmFzc2V0Lm5mdC52MS5FbXB0eVJlc3BvbnNlElgKDFVwZGF0ZVBhcmFtcxIkLmNvcmV1bS5hc3NldC5uZnQudjEuTXNnVXBkYXRlUGFyYW1zGiIuY29yZXVtLmFzc2V0Lm5mdC52MS5FbXB0eVJlc3BvbnNlGgWA57AqAUI9WjdnaXRodWIuY29tL0NvcmV1bUZvdW5kYXRpb24vY29yZXVtL3Y0L3gvYXNzZXQvbmZ0L3R5cGVzyOEeAGIGcHJvdG8z", [file_amino_amino, file_coreum_asset_nft_v1_nft, file_coreum_asset_nft_v1_params, file_coreum_asset_nft_v1_types, file_cosmos_msg_v1_msg, file_cosmos_proto_cosmos, file_gogoproto_gogo, file_google_protobuf_any]);

/**
 * MsgIssueClass defines message for the IssueClass method.
 *
 * @generated from message coreum.asset.nft.v1.MsgIssueClass
 */
export type MsgIssueClass = Message<"coreum.asset.nft.v1.MsgIssueClass"> & {
  /**
   * @generated from field: string issuer = 1;
   */
  issuer: string;

  /**
   * @generated from field: string symbol = 2;
   */
  symbol: string;

  /**
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * @generated from field: string uri = 5;
   */
  uri: string;

  /**
   * @generated from field: string uri_hash = 6;
   */
  uriHash: string;

  /**
   * @generated from field: google.protobuf.Any data = 7;
   */
  data?: Any;

  /**
   * @generated from field: repeated coreum.asset.nft.v1.ClassFeature features = 8;
   */
  features: ClassFeature[];

  /**
   * @generated from field: string royalty_rate = 9;
   */
  royaltyRate: string;
};

/**
 * Describes the message coreum.asset.nft.v1.MsgIssueClass.
 * Use `create(MsgIssueClassSchema)` to create a new message.
 */
export const MsgIssueClassSchema: GenMessage<MsgIssueClass> = /*@__PURE__*/
  messageDesc(file_coreum_asset_nft_v1_tx, 0);

/**
 * MsgMint defines message for the Mint method.
 *
 * @generated from message coreum.asset.nft.v1.MsgMint
 */
export type MsgMint = Message<"coreum.asset.nft.v1.MsgMint"> & {
  /**
   * @generated from field: string sender = 1;
   */
  sender: string;

  /**
   * @generated from field: string class_id = 2;
   */
  classId: string;

  /**
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * @generated from field: string uri = 4;
   */
  uri: string;

  /**
   * @generated from field: string uri_hash = 5;
   */
  uriHash: string;

  /**
   * Data can be DataBytes or DataDynamic.
   *
   * @generated from field: google.protobuf.Any data = 6;
   */
  data?: Any;

  /**
   * @generated from field: string recipient = 7;
   */
  recipient: string;
};

/**
 * Describes the message coreum.asset.nft.v1.MsgMint.
 * Use `create(MsgMintSchema)` to create a new message.
 */
export const MsgMintSchema: GenMessage<MsgMint> = /*@__PURE__*/
  messageDesc(file_coreum_asset_nft_v1_tx, 1);

/**
 * MsgUpdateData defines message to update the dynamic data.
 *
 * @generated from message coreum.asset.nft.v1.MsgUpdateData
 */
export type MsgUpdateData = Message<"coreum.asset.nft.v1.MsgUpdateData"> & {
  /**
   * @generated from field: string sender = 1;
   */
  sender: string;

  /**
   * @generated from field: string class_id = 2;
   */
  classId: string;

  /**
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * @generated from field: repeated coreum.asset.nft.v1.DataDynamicIndexedItem items = 4;
   */
  items: DataDynamicIndexedItem[];
};

/**
 * Describes the message coreum.asset.nft.v1.MsgUpdateData.
 * Use `create(MsgUpdateDataSchema)` to create a new message.
 */
export const MsgUpdateDataSchema: GenMessage<MsgUpdateData> = /*@__PURE__*/
  messageDesc(file_coreum_asset_nft_v1_tx, 2);

/**
 * MsgBurn defines message for the Burn method.
 *
 * @generated from message coreum.asset.nft.v1.MsgBurn
 */
export type MsgBurn = Message<"coreum.asset.nft.v1.MsgBurn"> & {
  /**
   * @generated from field: string sender = 1;
   */
  sender: string;

  /**
   * @generated from field: string class_id = 2;
   */
  classId: string;

  /**
   * @generated from field: string id = 3;
   */
  id: string;
};

/**
 * Describes the message coreum.asset.nft.v1.MsgBurn.
 * Use `create(MsgBurnSchema)` to create a new message.
 */
export const MsgBurnSchema: GenMessage<MsgBurn> = /*@__PURE__*/
  messageDesc(file_coreum_asset_nft_v1_tx, 3);

/**
 * @generated from message coreum.asset.nft.v1.MsgFreeze
 */
export type MsgFreeze = Message<"coreum.asset.nft.v1.MsgFreeze"> & {
  /**
   * @generated from field: string sender = 1;
   */
  sender: string;

  /**
   * @generated from field: string class_id = 2;
   */
  classId: string;

  /**
   * @generated from field: string id = 3;
   */
  id: string;
};

/**
 * Describes the message coreum.asset.nft.v1.MsgFreeze.
 * Use `create(MsgFreezeSchema)` to create a new message.
 */
export const MsgFreezeSchema: GenMessage<MsgFreeze> = /*@__PURE__*/
  messageDesc(file_coreum_asset_nft_v1_tx, 4);

/**
 * @generated from message coreum.asset.nft.v1.MsgUnfreeze
 */
export type MsgUnfreeze = Message<"coreum.asset.nft.v1.MsgUnfreeze"> & {
  /**
   * @generated from field: string sender = 1;
   */
  sender: string;

  /**
   * @generated from field: string class_id = 2;
   */
  classId: string;

  /**
   * @generated from field: string id = 3;
   */
  id: string;
};

/**
 * Describes the message coreum.asset.nft.v1.MsgUnfreeze.
 * Use `create(MsgUnfreezeSchema)` to create a new message.
 */
export const MsgUnfreezeSchema: GenMessage<MsgUnfreeze> = /*@__PURE__*/
  messageDesc(file_coreum_asset_nft_v1_tx, 5);

/**
 * @generated from message coreum.asset.nft.v1.MsgClassFreeze
 */
export type MsgClassFreeze = Message<"coreum.asset.nft.v1.MsgClassFreeze"> & {
  /**
   * @generated from field: string sender = 1;
   */
  sender: string;

  /**
   * @generated from field: string class_id = 2;
   */
  classId: string;

  /**
   * @generated from field: string account = 3;
   */
  account: string;
};

/**
 * Describes the message coreum.asset.nft.v1.MsgClassFreeze.
 * Use `create(MsgClassFreezeSchema)` to create a new message.
 */
export const MsgClassFreezeSchema: GenMessage<MsgClassFreeze> = /*@__PURE__*/
  messageDesc(file_coreum_asset_nft_v1_tx, 6);

/**
 * @generated from message coreum.asset.nft.v1.MsgClassUnfreeze
 */
export type MsgClassUnfreeze = Message<"coreum.asset.nft.v1.MsgClassUnfreeze"> & {
  /**
   * @generated from field: string sender = 1;
   */
  sender: string;

  /**
   * @generated from field: string class_id = 2;
   */
  classId: string;

  /**
   * @generated from field: string account = 3;
   */
  account: string;
};

/**
 * Describes the message coreum.asset.nft.v1.MsgClassUnfreeze.
 * Use `create(MsgClassUnfreezeSchema)` to create a new message.
 */
export const MsgClassUnfreezeSchema: GenMessage<MsgClassUnfreeze> = /*@__PURE__*/
  messageDesc(file_coreum_asset_nft_v1_tx, 7);

/**
 * @generated from message coreum.asset.nft.v1.MsgAddToWhitelist
 */
export type MsgAddToWhitelist = Message<"coreum.asset.nft.v1.MsgAddToWhitelist"> & {
  /**
   * @generated from field: string sender = 1;
   */
  sender: string;

  /**
   * @generated from field: string class_id = 2;
   */
  classId: string;

  /**
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * @generated from field: string account = 4;
   */
  account: string;
};

/**
 * Describes the message coreum.asset.nft.v1.MsgAddToWhitelist.
 * Use `create(MsgAddToWhitelistSchema)` to create a new message.
 */
export const MsgAddToWhitelistSchema: GenMessage<MsgAddToWhitelist> = /*@__PURE__*/
  messageDesc(file_coreum_asset_nft_v1_tx, 8);

/**
 * @generated from message coreum.asset.nft.v1.MsgRemoveFromWhitelist
 */
export type MsgRemoveFromWhitelist = Message<"coreum.asset.nft.v1.MsgRemoveFromWhitelist"> & {
  /**
   * @generated from field: string sender = 1;
   */
  sender: string;

  /**
   * @generated from field: string class_id = 2;
   */
  classId: string;

  /**
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * @generated from field: string account = 4;
   */
  account: string;
};

/**
 * Describes the message coreum.asset.nft.v1.MsgRemoveFromWhitelist.
 * Use `create(MsgRemoveFromWhitelistSchema)` to create a new message.
 */
export const MsgRemoveFromWhitelistSchema: GenMessage<MsgRemoveFromWhitelist> = /*@__PURE__*/
  messageDesc(file_coreum_asset_nft_v1_tx, 9);

/**
 * @generated from message coreum.asset.nft.v1.MsgAddToClassWhitelist
 */
export type MsgAddToClassWhitelist = Message<"coreum.asset.nft.v1.MsgAddToClassWhitelist"> & {
  /**
   * @generated from field: string sender = 1;
   */
  sender: string;

  /**
   * @generated from field: string class_id = 2;
   */
  classId: string;

  /**
   * @generated from field: string account = 3;
   */
  account: string;
};

/**
 * Describes the message coreum.asset.nft.v1.MsgAddToClassWhitelist.
 * Use `create(MsgAddToClassWhitelistSchema)` to create a new message.
 */
export const MsgAddToClassWhitelistSchema: GenMessage<MsgAddToClassWhitelist> = /*@__PURE__*/
  messageDesc(file_coreum_asset_nft_v1_tx, 10);

/**
 * @generated from message coreum.asset.nft.v1.MsgRemoveFromClassWhitelist
 */
export type MsgRemoveFromClassWhitelist = Message<"coreum.asset.nft.v1.MsgRemoveFromClassWhitelist"> & {
  /**
   * @generated from field: string sender = 1;
   */
  sender: string;

  /**
   * @generated from field: string class_id = 2;
   */
  classId: string;

  /**
   * @generated from field: string account = 3;
   */
  account: string;
};

/**
 * Describes the message coreum.asset.nft.v1.MsgRemoveFromClassWhitelist.
 * Use `create(MsgRemoveFromClassWhitelistSchema)` to create a new message.
 */
export const MsgRemoveFromClassWhitelistSchema: GenMessage<MsgRemoveFromClassWhitelist> = /*@__PURE__*/
  messageDesc(file_coreum_asset_nft_v1_tx, 11);

/**
 * @generated from message coreum.asset.nft.v1.MsgUpdateParams
 */
export type MsgUpdateParams = Message<"coreum.asset.nft.v1.MsgUpdateParams"> & {
  /**
   * @generated from field: string authority = 1;
   */
  authority: string;

  /**
   * @generated from field: coreum.asset.nft.v1.Params params = 2;
   */
  params?: Params;
};

/**
 * Describes the message coreum.asset.nft.v1.MsgUpdateParams.
 * Use `create(MsgUpdateParamsSchema)` to create a new message.
 */
export const MsgUpdateParamsSchema: GenMessage<MsgUpdateParams> = /*@__PURE__*/
  messageDesc(file_coreum_asset_nft_v1_tx, 12);

/**
 * @generated from message coreum.asset.nft.v1.EmptyResponse
 */
export type EmptyResponse = Message<"coreum.asset.nft.v1.EmptyResponse"> & {
};

/**
 * Describes the message coreum.asset.nft.v1.EmptyResponse.
 * Use `create(EmptyResponseSchema)` to create a new message.
 */
export const EmptyResponseSchema: GenMessage<EmptyResponse> = /*@__PURE__*/
  messageDesc(file_coreum_asset_nft_v1_tx, 13);

/**
 * Msg defines the Msg service.
 *
 * @generated from service coreum.asset.nft.v1.Msg
 */
export const Msg: GenService<{
  /**
   * IssueClass creates new non-fungible token class.
   *
   * @generated from rpc coreum.asset.nft.v1.Msg.IssueClass
   */
  issueClass: {
    methodKind: "unary";
    input: typeof MsgIssueClassSchema;
    output: typeof EmptyResponseSchema;
  },
  /**
   * Mint mints new non-fungible token in the class.
   *
   * @generated from rpc coreum.asset.nft.v1.Msg.Mint
   */
  mint: {
    methodKind: "unary";
    input: typeof MsgMintSchema;
    output: typeof EmptyResponseSchema;
  },
  /**
   * UpdateData updates the existing non-fungible token data in the class.
   *
   * @generated from rpc coreum.asset.nft.v1.Msg.UpdateData
   */
  updateData: {
    methodKind: "unary";
    input: typeof MsgUpdateDataSchema;
    output: typeof EmptyResponseSchema;
  },
  /**
   * Burn burns the existing non-fungible token in the class.
   *
   * @generated from rpc coreum.asset.nft.v1.Msg.Burn
   */
  burn: {
    methodKind: "unary";
    input: typeof MsgBurnSchema;
    output: typeof EmptyResponseSchema;
  },
  /**
   * Freeze freezes an NFT
   *
   * @generated from rpc coreum.asset.nft.v1.Msg.Freeze
   */
  freeze: {
    methodKind: "unary";
    input: typeof MsgFreezeSchema;
    output: typeof EmptyResponseSchema;
  },
  /**
   * Unfreeze removes the freeze effect already put on an NFT
   *
   * @generated from rpc coreum.asset.nft.v1.Msg.Unfreeze
   */
  unfreeze: {
    methodKind: "unary";
    input: typeof MsgUnfreezeSchema;
    output: typeof EmptyResponseSchema;
  },
  /**
   * AddToWhitelist sets the account as whitelisted to hold the NFT
   *
   * @generated from rpc coreum.asset.nft.v1.Msg.AddToWhitelist
   */
  addToWhitelist: {
    methodKind: "unary";
    input: typeof MsgAddToWhitelistSchema;
    output: typeof EmptyResponseSchema;
  },
  /**
   * RemoveFromWhitelist removes an account from whitelisted list of the NFT
   *
   * @generated from rpc coreum.asset.nft.v1.Msg.RemoveFromWhitelist
   */
  removeFromWhitelist: {
    methodKind: "unary";
    input: typeof MsgRemoveFromWhitelistSchema;
    output: typeof EmptyResponseSchema;
  },
  /**
   * AddToClassWhitelist adds account as whitelist for all the NFTs in the class
   * NOTE: class whitelist does not affect the individual nft whitelisting.
   *
   * @generated from rpc coreum.asset.nft.v1.Msg.AddToClassWhitelist
   */
  addToClassWhitelist: {
    methodKind: "unary";
    input: typeof MsgAddToClassWhitelistSchema;
    output: typeof EmptyResponseSchema;
  },
  /**
   * RemoveFromClassWhitelist removes account as whitelist for the entire class
   * NOTE:
   * class whitelist does not affect the individual nft whitelisting.
   * ie. if specific whitelist is granted for an NFT, that whitelist will
   * still be valid, ater we add and remove it from the class whitelist.
   *
   * @generated from rpc coreum.asset.nft.v1.Msg.RemoveFromClassWhitelist
   */
  removeFromClassWhitelist: {
    methodKind: "unary";
    input: typeof MsgRemoveFromClassWhitelistSchema;
    output: typeof EmptyResponseSchema;
  },
  /**
   * ClassFreeze freezes all NFTs of a class held by an account.
   *
   * @generated from rpc coreum.asset.nft.v1.Msg.ClassFreeze
   */
  classFreeze: {
    methodKind: "unary";
    input: typeof MsgClassFreezeSchema;
    output: typeof EmptyResponseSchema;
  },
  /**
   * ClassUnfreeze removes class-freeze on an account for an NFT class.
   * NOTE:
   * class unfreeze does not affect the individual nft freeze.
   *
   * @generated from rpc coreum.asset.nft.v1.Msg.ClassUnfreeze
   */
  classUnfreeze: {
    methodKind: "unary";
    input: typeof MsgClassUnfreezeSchema;
    output: typeof EmptyResponseSchema;
  },
  /**
   * UpdateParams is a governance operation that sets the parameters of the module.
   * NOTE: all parameters must be provided.
   *
   * @generated from rpc coreum.asset.nft.v1.Msg.UpdateParams
   */
  updateParams: {
    methodKind: "unary";
    input: typeof MsgUpdateParamsSchema;
    output: typeof EmptyResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_coreum_asset_nft_v1_tx, 0);

