// @generated by protoc-gen-es v2.0.0 with parameter "target=ts"
// @generated from file coreum/asset/nft/v1/types.proto (package coreum.asset.nft.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_gogoproto_gogo } from "../../../../gogoproto/gogo_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file coreum/asset/nft/v1/types.proto.
 */
export const file_coreum_asset_nft_v1_types: GenFile = /*@__PURE__*/
  fileDesc("Ch9jb3JldW0vYXNzZXQvbmZ0L3YxL3R5cGVzLnByb3RvEhNjb3JldW0uYXNzZXQubmZ0LnYxIhkKCURhdGFCeXRlcxIMCgREYXRhGAEgASgMIlEKD0RhdGFEeW5hbWljSXRlbRIwCgdlZGl0b3JzGAEgAygOMh8uY29yZXVtLmFzc2V0Lm5mdC52MS5EYXRhRWRpdG9yEgwKBGRhdGEYAiABKAwiNQoWRGF0YUR5bmFtaWNJbmRleGVkSXRlbRINCgVpbmRleBgBIAEoDRIMCgRkYXRhGAIgASgMIkgKC0RhdGFEeW5hbWljEjkKBWl0ZW1zGAEgAygLMiQuY29yZXVtLmFzc2V0Lm5mdC52MS5EYXRhRHluYW1pY0l0ZW1CBMjeHwAqIgoKRGF0YUVkaXRvchIJCgVhZG1pbhAAEgkKBW93bmVyEAFCPVo3Z2l0aHViLmNvbS9Db3JldW1Gb3VuZGF0aW9uL2NvcmV1bS92NC94L2Fzc2V0L25mdC90eXBlc8jhHgBiBnByb3RvMw", [file_gogoproto_gogo]);

/**
 * DataBytes represents the immutable data.
 *
 * @generated from message coreum.asset.nft.v1.DataBytes
 */
export type DataBytes = Message<"coreum.asset.nft.v1.DataBytes"> & {
  /**
   * @generated from field: bytes Data = 1;
   */
  Data: Uint8Array;
};

/**
 * Describes the message coreum.asset.nft.v1.DataBytes.
 * Use `create(DataBytesSchema)` to create a new message.
 */
export const DataBytesSchema: GenMessage<DataBytes> = /*@__PURE__*/
  messageDesc(file_coreum_asset_nft_v1_types, 0);

/**
 * DataDynamicItem contains the updatable data and modification types.
 *
 * @generated from message coreum.asset.nft.v1.DataDynamicItem
 */
export type DataDynamicItem = Message<"coreum.asset.nft.v1.DataDynamicItem"> & {
  /**
   * contains the set of the data editors, if empty no one can update.
   *
   * @generated from field: repeated coreum.asset.nft.v1.DataEditor editors = 1;
   */
  editors: DataEditor[];

  /**
   * @generated from field: bytes data = 2;
   */
  data: Uint8Array;
};

/**
 * Describes the message coreum.asset.nft.v1.DataDynamicItem.
 * Use `create(DataDynamicItemSchema)` to create a new message.
 */
export const DataDynamicItemSchema: GenMessage<DataDynamicItem> = /*@__PURE__*/
  messageDesc(file_coreum_asset_nft_v1_types, 1);

/**
 * DataDynamicIndexed contains the data and it's index in the DataDynamic.
 *
 * @generated from message coreum.asset.nft.v1.DataDynamicIndexedItem
 */
export type DataDynamicIndexedItem = Message<"coreum.asset.nft.v1.DataDynamicIndexedItem"> & {
  /**
   * @generated from field: uint32 index = 1;
   */
  index: number;

  /**
   * @generated from field: bytes data = 2;
   */
  data: Uint8Array;
};

/**
 * Describes the message coreum.asset.nft.v1.DataDynamicIndexedItem.
 * Use `create(DataDynamicIndexedItemSchema)` to create a new message.
 */
export const DataDynamicIndexedItemSchema: GenMessage<DataDynamicIndexedItem> = /*@__PURE__*/
  messageDesc(file_coreum_asset_nft_v1_types, 2);

/**
 * DataDynamic is dynamic data which contains the list of the items allowed to be modified base on their modification types.
 *
 * @generated from message coreum.asset.nft.v1.DataDynamic
 */
export type DataDynamic = Message<"coreum.asset.nft.v1.DataDynamic"> & {
  /**
   * @generated from field: repeated coreum.asset.nft.v1.DataDynamicItem items = 1;
   */
  items: DataDynamicItem[];
};

/**
 * Describes the message coreum.asset.nft.v1.DataDynamic.
 * Use `create(DataDynamicSchema)` to create a new message.
 */
export const DataDynamicSchema: GenMessage<DataDynamic> = /*@__PURE__*/
  messageDesc(file_coreum_asset_nft_v1_types, 3);

/**
 * DataEditor defines possible data editors.
 *
 * @generated from enum coreum.asset.nft.v1.DataEditor
 */
export enum DataEditor {
  /**
   * @generated from enum value: admin = 0;
   */
  admin = 0,

  /**
   * @generated from enum value: owner = 1;
   */
  owner = 1,
}

/**
 * Describes the enum coreum.asset.nft.v1.DataEditor.
 */
export const DataEditorSchema: GenEnum<DataEditor> = /*@__PURE__*/
  enumDesc(file_coreum_asset_nft_v1_types, 0);

