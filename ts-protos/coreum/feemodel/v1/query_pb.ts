// @generated by protoc-gen-es v2.0.0 with parameter "target=ts"
// @generated from file coreum/feemodel/v1/query.proto (package coreum.feemodel.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Params } from "./params_pb";
import { file_coreum_feemodel_v1_params } from "./params_pb";
import type { DecCoin } from "../../../cosmos/base/v1beta1/coin_pb";
import { file_cosmos_base_v1beta1_coin } from "../../../cosmos/base/v1beta1/coin_pb";
import { file_gogoproto_gogo } from "../../../gogoproto/gogo_pb";
import { file_google_api_annotations } from "../../../google/api/annotations_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file coreum/feemodel/v1/query.proto.
 */
export const file_coreum_feemodel_v1_query: GenFile = /*@__PURE__*/
  fileDesc("Ch5jb3JldW0vZmVlbW9kZWwvdjEvcXVlcnkucHJvdG8SEmNvcmV1bS5mZWVtb2RlbC52MSIZChdRdWVyeU1pbkdhc1ByaWNlUmVxdWVzdCJVChhRdWVyeU1pbkdhc1ByaWNlUmVzcG9uc2USOQoNbWluX2dhc19wcmljZRgBIAEoCzIcLmNvc21vcy5iYXNlLnYxYmV0YTEuRGVjQ29pbkIEyN4fACI3Ch9RdWVyeVJlY29tbWVuZGVkR2FzUHJpY2VSZXF1ZXN0EhQKDGFmdGVyX2Jsb2NrcxgBIAEoDSK2AQogUXVlcnlSZWNvbW1lbmRlZEdhc1ByaWNlUmVzcG9uc2USLwoDbG93GAEgASgLMhwuY29zbW9zLmJhc2UudjFiZXRhMS5EZWNDb2luQgTI3h8AEi8KA21lZBgCIAEoCzIcLmNvc21vcy5iYXNlLnYxYmV0YTEuRGVjQ29pbkIEyN4fABIwCgRoaWdoGAMgASgLMhwuY29zbW9zLmJhc2UudjFiZXRhMS5EZWNDb2luQgTI3h8AIhQKElF1ZXJ5UGFyYW1zUmVxdWVzdCJHChNRdWVyeVBhcmFtc1Jlc3BvbnNlEjAKBnBhcmFtcxgBIAEoCzIaLmNvcmV1bS5mZWVtb2RlbC52MS5QYXJhbXNCBMjeHwAy0gMKBVF1ZXJ5EpMBCgtNaW5HYXNQcmljZRIrLmNvcmV1bS5mZWVtb2RlbC52MS5RdWVyeU1pbkdhc1ByaWNlUmVxdWVzdBosLmNvcmV1bS5mZWVtb2RlbC52MS5RdWVyeU1pbkdhc1ByaWNlUmVzcG9uc2UiKYLT5JMCIxIhL2NvcmV1bS9mZWVtb2RlbC92MS9taW5fZ2FzX3ByaWNlErMBChNSZWNvbW1lbmRlZEdhc1ByaWNlEjMuY29yZXVtLmZlZW1vZGVsLnYxLlF1ZXJ5UmVjb21tZW5kZWRHYXNQcmljZVJlcXVlc3QaNC5jb3JldW0uZmVlbW9kZWwudjEuUXVlcnlSZWNvbW1lbmRlZEdhc1ByaWNlUmVzcG9uc2UiMYLT5JMCKxIpL2NvcmV1bS9mZWVtb2RlbC92MS9yZWNvbW1lbmRlZF9nYXNfcHJpY2USfQoGUGFyYW1zEiYuY29yZXVtLmZlZW1vZGVsLnYxLlF1ZXJ5UGFyYW1zUmVxdWVzdBonLmNvcmV1bS5mZWVtb2RlbC52MS5RdWVyeVBhcmFtc1Jlc3BvbnNlIiKC0+STAhwSGi9jb3JldW0vZmVlbW9kZWwvdjEvcGFyYW1zQjhaNmdpdGh1Yi5jb20vQ29yZXVtRm91bmRhdGlvbi9jb3JldW0vdjQveC9mZWVtb2RlbC90eXBlc2IGcHJvdG8z", [file_coreum_feemodel_v1_params, file_cosmos_base_v1beta1_coin, file_gogoproto_gogo, file_google_api_annotations]);

/**
 * QueryMinGasPriceRequest is the request type for the Query/MinGasPrice RPC method.
 *
 * @generated from message coreum.feemodel.v1.QueryMinGasPriceRequest
 */
export type QueryMinGasPriceRequest = Message<"coreum.feemodel.v1.QueryMinGasPriceRequest"> & {
};

/**
 * Describes the message coreum.feemodel.v1.QueryMinGasPriceRequest.
 * Use `create(QueryMinGasPriceRequestSchema)` to create a new message.
 */
export const QueryMinGasPriceRequestSchema: GenMessage<QueryMinGasPriceRequest> = /*@__PURE__*/
  messageDesc(file_coreum_feemodel_v1_query, 0);

/**
 * QueryMinGasPriceResponse is the response type for the Query/MinGasPrice RPC method.
 *
 * @generated from message coreum.feemodel.v1.QueryMinGasPriceResponse
 */
export type QueryMinGasPriceResponse = Message<"coreum.feemodel.v1.QueryMinGasPriceResponse"> & {
  /**
   * min_gas_price is the current minimum gas price required by the network.
   *
   * @generated from field: cosmos.base.v1beta1.DecCoin min_gas_price = 1;
   */
  minGasPrice?: DecCoin;
};

/**
 * Describes the message coreum.feemodel.v1.QueryMinGasPriceResponse.
 * Use `create(QueryMinGasPriceResponseSchema)` to create a new message.
 */
export const QueryMinGasPriceResponseSchema: GenMessage<QueryMinGasPriceResponse> = /*@__PURE__*/
  messageDesc(file_coreum_feemodel_v1_query, 1);

/**
 * @generated from message coreum.feemodel.v1.QueryRecommendedGasPriceRequest
 */
export type QueryRecommendedGasPriceRequest = Message<"coreum.feemodel.v1.QueryRecommendedGasPriceRequest"> & {
  /**
   * @generated from field: uint32 after_blocks = 1;
   */
  afterBlocks: number;
};

/**
 * Describes the message coreum.feemodel.v1.QueryRecommendedGasPriceRequest.
 * Use `create(QueryRecommendedGasPriceRequestSchema)` to create a new message.
 */
export const QueryRecommendedGasPriceRequestSchema: GenMessage<QueryRecommendedGasPriceRequest> = /*@__PURE__*/
  messageDesc(file_coreum_feemodel_v1_query, 2);

/**
 * @generated from message coreum.feemodel.v1.QueryRecommendedGasPriceResponse
 */
export type QueryRecommendedGasPriceResponse = Message<"coreum.feemodel.v1.QueryRecommendedGasPriceResponse"> & {
  /**
   * @generated from field: cosmos.base.v1beta1.DecCoin low = 1;
   */
  low?: DecCoin;

  /**
   * @generated from field: cosmos.base.v1beta1.DecCoin med = 2;
   */
  med?: DecCoin;

  /**
   * @generated from field: cosmos.base.v1beta1.DecCoin high = 3;
   */
  high?: DecCoin;
};

/**
 * Describes the message coreum.feemodel.v1.QueryRecommendedGasPriceResponse.
 * Use `create(QueryRecommendedGasPriceResponseSchema)` to create a new message.
 */
export const QueryRecommendedGasPriceResponseSchema: GenMessage<QueryRecommendedGasPriceResponse> = /*@__PURE__*/
  messageDesc(file_coreum_feemodel_v1_query, 3);

/**
 * QueryParamsRequest defines the request type for querying x/feemodel parameters.
 *
 * @generated from message coreum.feemodel.v1.QueryParamsRequest
 */
export type QueryParamsRequest = Message<"coreum.feemodel.v1.QueryParamsRequest"> & {
};

/**
 * Describes the message coreum.feemodel.v1.QueryParamsRequest.
 * Use `create(QueryParamsRequestSchema)` to create a new message.
 */
export const QueryParamsRequestSchema: GenMessage<QueryParamsRequest> = /*@__PURE__*/
  messageDesc(file_coreum_feemodel_v1_query, 4);

/**
 * QueryParamsResponse defines the response type for querying x/feemodel parameters.
 *
 * @generated from message coreum.feemodel.v1.QueryParamsResponse
 */
export type QueryParamsResponse = Message<"coreum.feemodel.v1.QueryParamsResponse"> & {
  /**
   * @generated from field: coreum.feemodel.v1.Params params = 1;
   */
  params?: Params;
};

/**
 * Describes the message coreum.feemodel.v1.QueryParamsResponse.
 * Use `create(QueryParamsResponseSchema)` to create a new message.
 */
export const QueryParamsResponseSchema: GenMessage<QueryParamsResponse> = /*@__PURE__*/
  messageDesc(file_coreum_feemodel_v1_query, 5);

/**
 * Query defines the gRPC querier service.
 *
 * @generated from service coreum.feemodel.v1.Query
 */
export const Query: GenService<{
  /**
   * MinGasPrice queries the current minimum gas price required by the network.
   *
   * @generated from rpc coreum.feemodel.v1.Query.MinGasPrice
   */
  minGasPrice: {
    methodKind: "unary";
    input: typeof QueryMinGasPriceRequestSchema;
    output: typeof QueryMinGasPriceResponseSchema;
  },
  /**
   * RecommendedGasPrice queries the recommended gas price for the next n blocks.
   *
   * @generated from rpc coreum.feemodel.v1.Query.RecommendedGasPrice
   */
  recommendedGasPrice: {
    methodKind: "unary";
    input: typeof QueryRecommendedGasPriceRequestSchema;
    output: typeof QueryRecommendedGasPriceResponseSchema;
  },
  /**
   * Params queries the parameters of x/feemodel module.
   *
   * @generated from rpc coreum.feemodel.v1.Query.Params
   */
  params: {
    methodKind: "unary";
    input: typeof QueryParamsRequestSchema;
    output: typeof QueryParamsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_coreum_feemodel_v1_query, 0);

