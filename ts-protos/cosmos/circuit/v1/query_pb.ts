// @generated by protoc-gen-es v2.0.0 with parameter "target=ts"
// @generated from file cosmos/circuit/v1/query.proto (package cosmos.circuit.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { PageRequest, PageResponse } from "../../base/query/v1beta1/pagination_pb";
import { file_cosmos_base_query_v1beta1_pagination } from "../../base/query/v1beta1/pagination_pb";
import type { GenesisAccountPermissions, Permissions } from "./types_pb";
import { file_cosmos_circuit_v1_types } from "./types_pb";
import { file_google_api_annotations } from "../../../google/api/annotations_pb";
import { file_cosmos_query_v1_query } from "../../query/v1/query_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file cosmos/circuit/v1/query.proto.
 */
export const file_cosmos_circuit_v1_query: GenFile = /*@__PURE__*/
  fileDesc("Ch1jb3Ntb3MvY2lyY3VpdC92MS9xdWVyeS5wcm90bxIRY29zbW9zLmNpcmN1aXQudjEiJgoTUXVlcnlBY2NvdW50UmVxdWVzdBIPCgdhZGRyZXNzGAEgASgJIkUKD0FjY291bnRSZXNwb25zZRIyCgpwZXJtaXNzaW9uGAEgASgLMh4uY29zbW9zLmNpcmN1aXQudjEuUGVybWlzc2lvbnMiUgoUUXVlcnlBY2NvdW50c1JlcXVlc3QSOgoKcGFnaW5hdGlvbhgBIAEoCzImLmNvc21vcy5iYXNlLnF1ZXJ5LnYxYmV0YTEuUGFnZVJlcXVlc3QijwEKEEFjY291bnRzUmVzcG9uc2USPgoIYWNjb3VudHMYASADKAsyLC5jb3Ntb3MuY2lyY3VpdC52MS5HZW5lc2lzQWNjb3VudFBlcm1pc3Npb25zEjsKCnBhZ2luYXRpb24YAiABKAsyJy5jb3Ntb3MuYmFzZS5xdWVyeS52MWJldGExLlBhZ2VSZXNwb25zZSIaChhRdWVyeURpc2FibGVkTGlzdFJlcXVlc3QiLQoURGlzYWJsZWRMaXN0UmVzcG9uc2USFQoNZGlzYWJsZWRfbGlzdBgBIAMoCTKtAwoFUXVlcnkSiQEKB0FjY291bnQSJi5jb3Ntb3MuY2lyY3VpdC52MS5RdWVyeUFjY291bnRSZXF1ZXN0GiIuY29zbW9zLmNpcmN1aXQudjEuQWNjb3VudFJlc3BvbnNlIjKI57AqAYLT5JMCJxIlL2Nvc21vcy9jaXJjdWl0L3YxL2FjY291bnRzL3thZGRyZXNzfRKCAQoIQWNjb3VudHMSJy5jb3Ntb3MuY2lyY3VpdC52MS5RdWVyeUFjY291bnRzUmVxdWVzdBojLmNvc21vcy5jaXJjdWl0LnYxLkFjY291bnRzUmVzcG9uc2UiKIjnsCoBgtPkkwIdEhsvY29zbW9zL2NpcmN1aXQvdjEvYWNjb3VudHMSkgEKDERpc2FibGVkTGlzdBIrLmNvc21vcy5jaXJjdWl0LnYxLlF1ZXJ5RGlzYWJsZWRMaXN0UmVxdWVzdBonLmNvc21vcy5jaXJjdWl0LnYxLkRpc2FibGVkTGlzdFJlc3BvbnNlIiyI57AqAYLT5JMCIRIfL2Nvc21vcy9jaXJjdWl0L3YxL2Rpc2FibGVfbGlzdEIeWhxjb3Ntb3NzZGsuaW8veC9jaXJjdWl0L3R5cGVzYgZwcm90bzM", [file_cosmos_base_query_v1beta1_pagination, file_cosmos_circuit_v1_types, file_google_api_annotations, file_cosmos_query_v1_query]);

/**
 * QueryAccountRequest is the request type for the Query/Account RPC method.
 *
 * @generated from message cosmos.circuit.v1.QueryAccountRequest
 */
export type QueryAccountRequest = Message<"cosmos.circuit.v1.QueryAccountRequest"> & {
  /**
   * @generated from field: string address = 1;
   */
  address: string;
};

/**
 * Describes the message cosmos.circuit.v1.QueryAccountRequest.
 * Use `create(QueryAccountRequestSchema)` to create a new message.
 */
export const QueryAccountRequestSchema: GenMessage<QueryAccountRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_circuit_v1_query, 0);

/**
 * AccountResponse is the response type for the Query/Account RPC method.
 *
 * @generated from message cosmos.circuit.v1.AccountResponse
 */
export type AccountResponse = Message<"cosmos.circuit.v1.AccountResponse"> & {
  /**
   * @generated from field: cosmos.circuit.v1.Permissions permission = 1;
   */
  permission?: Permissions;
};

/**
 * Describes the message cosmos.circuit.v1.AccountResponse.
 * Use `create(AccountResponseSchema)` to create a new message.
 */
export const AccountResponseSchema: GenMessage<AccountResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_circuit_v1_query, 1);

/**
 * QueryAccountsRequest is the request type for the Query/Accounts RPC method.
 *
 * @generated from message cosmos.circuit.v1.QueryAccountsRequest
 */
export type QueryAccountsRequest = Message<"cosmos.circuit.v1.QueryAccountsRequest"> & {
  /**
   * pagination defines an optional pagination for the request.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;
};

/**
 * Describes the message cosmos.circuit.v1.QueryAccountsRequest.
 * Use `create(QueryAccountsRequestSchema)` to create a new message.
 */
export const QueryAccountsRequestSchema: GenMessage<QueryAccountsRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_circuit_v1_query, 2);

/**
 * AccountsResponse is the response type for the Query/Accounts RPC method.
 *
 * @generated from message cosmos.circuit.v1.AccountsResponse
 */
export type AccountsResponse = Message<"cosmos.circuit.v1.AccountsResponse"> & {
  /**
   * @generated from field: repeated cosmos.circuit.v1.GenesisAccountPermissions accounts = 1;
   */
  accounts: GenesisAccountPermissions[];

  /**
   * pagination defines the pagination in the response.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;
};

/**
 * Describes the message cosmos.circuit.v1.AccountsResponse.
 * Use `create(AccountsResponseSchema)` to create a new message.
 */
export const AccountsResponseSchema: GenMessage<AccountsResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_circuit_v1_query, 3);

/**
 * QueryDisableListRequest is the request type for the Query/DisabledList RPC method.
 *
 * @generated from message cosmos.circuit.v1.QueryDisabledListRequest
 */
export type QueryDisabledListRequest = Message<"cosmos.circuit.v1.QueryDisabledListRequest"> & {
};

/**
 * Describes the message cosmos.circuit.v1.QueryDisabledListRequest.
 * Use `create(QueryDisabledListRequestSchema)` to create a new message.
 */
export const QueryDisabledListRequestSchema: GenMessage<QueryDisabledListRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_circuit_v1_query, 4);

/**
 * DisabledListResponse is the response type for the Query/DisabledList RPC method.
 *
 * @generated from message cosmos.circuit.v1.DisabledListResponse
 */
export type DisabledListResponse = Message<"cosmos.circuit.v1.DisabledListResponse"> & {
  /**
   * @generated from field: repeated string disabled_list = 1;
   */
  disabledList: string[];
};

/**
 * Describes the message cosmos.circuit.v1.DisabledListResponse.
 * Use `create(DisabledListResponseSchema)` to create a new message.
 */
export const DisabledListResponseSchema: GenMessage<DisabledListResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_circuit_v1_query, 5);

/**
 * Query defines the circuit gRPC querier service.
 *
 * @generated from service cosmos.circuit.v1.Query
 */
export const Query: GenService<{
  /**
   * Account returns account permissions.
   *
   * @generated from rpc cosmos.circuit.v1.Query.Account
   */
  account: {
    methodKind: "unary";
    input: typeof QueryAccountRequestSchema;
    output: typeof AccountResponseSchema;
  },
  /**
   * Account returns account permissions.
   *
   * @generated from rpc cosmos.circuit.v1.Query.Accounts
   */
  accounts: {
    methodKind: "unary";
    input: typeof QueryAccountsRequestSchema;
    output: typeof AccountsResponseSchema;
  },
  /**
   * DisabledList returns a list of disabled message urls
   *
   * @generated from rpc cosmos.circuit.v1.Query.DisabledList
   */
  disabledList: {
    methodKind: "unary";
    input: typeof QueryDisabledListRequestSchema;
    output: typeof DisabledListResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_cosmos_circuit_v1_query, 0);

