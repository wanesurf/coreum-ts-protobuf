// @generated by protoc-gen-es v2.0.0 with parameter "target=ts"
// @generated from file cosmos/distribution/v1beta1/tx.proto (package cosmos.distribution.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_gogoproto_gogo } from "../../../gogoproto/gogo_pb";
import type { Coin } from "../../base/v1beta1/coin_pb";
import { file_cosmos_base_v1beta1_coin } from "../../base/v1beta1/coin_pb";
import { file_cosmos_proto_cosmos } from "../../../cosmos_proto/cosmos_pb";
import { file_cosmos_msg_v1_msg } from "../../msg/v1/msg_pb";
import { file_amino_amino } from "../../../amino/amino_pb";
import type { Params } from "./distribution_pb";
import { file_cosmos_distribution_v1beta1_distribution } from "./distribution_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file cosmos/distribution/v1beta1/tx.proto.
 */
export const file_cosmos_distribution_v1beta1_tx: GenFile = /*@__PURE__*/
  fileDesc("CiRjb3Ntb3MvZGlzdHJpYnV0aW9uL3YxYmV0YTEvdHgucHJvdG8SG2Nvc21vcy5kaXN0cmlidXRpb24udjFiZXRhMSLIAQoVTXNnU2V0V2l0aGRyYXdBZGRyZXNzEjMKEWRlbGVnYXRvcl9hZGRyZXNzGAEgASgJQhjStC0UY29zbW9zLkFkZHJlc3NTdHJpbmcSMgoQd2l0aGRyYXdfYWRkcmVzcxgCIAEoCUIY0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nOkaIoB8A6KAfAILnsCoRZGVsZWdhdG9yX2FkZHJlc3OK57AqI2Nvc21vcy1zZGsvTXNnTW9kaWZ5V2l0aGRyYXdBZGRyZXNzIh8KHU1zZ1NldFdpdGhkcmF3QWRkcmVzc1Jlc3BvbnNlItoBChpNc2dXaXRoZHJhd0RlbGVnYXRvclJld2FyZBIzChFkZWxlZ2F0b3JfYWRkcmVzcxgBIAEoCUIY0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nEjwKEXZhbGlkYXRvcl9hZGRyZXNzGAIgASgJQiHStC0dY29zbW9zLlZhbGlkYXRvckFkZHJlc3NTdHJpbmc6SYigHwDooB8AguewKhFkZWxlZ2F0b3JfYWRkcmVzc4rnsComY29zbW9zLXNkay9Nc2dXaXRoZHJhd0RlbGVnYXRpb25SZXdhcmQilwEKIk1zZ1dpdGhkcmF3RGVsZWdhdG9yUmV3YXJkUmVzcG9uc2UScQoGYW1vdW50GAEgAygLMhkuY29zbW9zLmJhc2UudjFiZXRhMS5Db2luQkbI3h8Aqt8fKGdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvdHlwZXMuQ29pbnOa57AqDGxlZ2FjeV9jb2luc6jnsCoBIqYBCh5Nc2dXaXRoZHJhd1ZhbGlkYXRvckNvbW1pc3Npb24SPAoRdmFsaWRhdG9yX2FkZHJlc3MYASABKAlCIdK0LR1jb3Ntb3MuVmFsaWRhdG9yQWRkcmVzc1N0cmluZzpGiKAfAOigHwCC57AqEXZhbGlkYXRvcl9hZGRyZXNziuewKiNjb3Ntb3Mtc2RrL01zZ1dpdGhkcmF3VmFsQ29tbWlzc2lvbiKbAQomTXNnV2l0aGRyYXdWYWxpZGF0b3JDb21taXNzaW9uUmVzcG9uc2UScQoGYW1vdW50GAEgAygLMhkuY29zbW9zLmJhc2UudjFiZXRhMS5Db2luQkbI3h8Aqt8fKGdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvdHlwZXMuQ29pbnOa57AqDGxlZ2FjeV9jb2luc6jnsCoBIvIBChRNc2dGdW5kQ29tbXVuaXR5UG9vbBJxCgZhbW91bnQYASADKAsyGS5jb3Ntb3MuYmFzZS52MWJldGExLkNvaW5CRsjeHwCq3x8oZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay90eXBlcy5Db2luc5rnsCoMbGVnYWN5X2NvaW5zqOewKgESKwoJZGVwb3NpdG9yGAIgASgJQhjStC0UY29zbW9zLkFkZHJlc3NTdHJpbmc6OoigHwDooB8AguewKglkZXBvc2l0b3KK57AqH2Nvc21vcy1zZGsvTXNnRnVuZENvbW11bml0eVBvb2wiHgocTXNnRnVuZENvbW11bml0eVBvb2xSZXNwb25zZSK6AQoPTXNnVXBkYXRlUGFyYW1zEisKCWF1dGhvcml0eRgBIAEoCUIY0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nEj4KBnBhcmFtcxgCIAEoCzIjLmNvc21vcy5kaXN0cmlidXRpb24udjFiZXRhMS5QYXJhbXNCCcjeHwCo57AqATo6guewKglhdXRob3JpdHmK57AqJ2Nvc21vcy1zZGsvZGlzdHJpYnV0aW9uL01zZ1VwZGF0ZVBhcmFtcyIZChdNc2dVcGRhdGVQYXJhbXNSZXNwb25zZSKFAgoVTXNnQ29tbXVuaXR5UG9vbFNwZW5kEisKCWF1dGhvcml0eRgBIAEoCUIY0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nEhEKCXJlY2lwaWVudBgCIAEoCRJxCgZhbW91bnQYAyADKAsyGS5jb3Ntb3MuYmFzZS52MWJldGExLkNvaW5CRsjeHwCq3x8oZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay90eXBlcy5Db2luc5rnsCoMbGVnYWN5X2NvaW5zqOewKgE6OYLnsCoJYXV0aG9yaXR5iuewKiZjb3Ntb3Mtc2RrL2Rpc3RyL01zZ0NvbW11bml0eVBvb2xTcGVuZCIfCh1Nc2dDb21tdW5pdHlQb29sU3BlbmRSZXNwb25zZSLAAgoeTXNnRGVwb3NpdFZhbGlkYXRvclJld2FyZHNQb29sEisKCWRlcG9zaXRvchgBIAEoCUIY0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nEjwKEXZhbGlkYXRvcl9hZGRyZXNzGAIgASgJQiHStC0dY29zbW9zLlZhbGlkYXRvckFkZHJlc3NTdHJpbmcScQoGYW1vdW50GAMgAygLMhkuY29zbW9zLmJhc2UudjFiZXRhMS5Db2luQkbI3h8Aqt8fKGdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvdHlwZXMuQ29pbnOa57AqDGxlZ2FjeV9jb2luc6jnsCoBOkCIoB8A6KAfAILnsCoJZGVwb3NpdG9yiuewKiVjb3Ntb3Mtc2RrL2Rpc3RyL01zZ0RlcG9zaXRWYWxSZXdhcmRzIigKJk1zZ0RlcG9zaXRWYWxpZGF0b3JSZXdhcmRzUG9vbFJlc3BvbnNlMuwHCgNNc2cShAEKElNldFdpdGhkcmF3QWRkcmVzcxIyLmNvc21vcy5kaXN0cmlidXRpb24udjFiZXRhMS5Nc2dTZXRXaXRoZHJhd0FkZHJlc3MaOi5jb3Ntb3MuZGlzdHJpYnV0aW9uLnYxYmV0YTEuTXNnU2V0V2l0aGRyYXdBZGRyZXNzUmVzcG9uc2USkwEKF1dpdGhkcmF3RGVsZWdhdG9yUmV3YXJkEjcuY29zbW9zLmRpc3RyaWJ1dGlvbi52MWJldGExLk1zZ1dpdGhkcmF3RGVsZWdhdG9yUmV3YXJkGj8uY29zbW9zLmRpc3RyaWJ1dGlvbi52MWJldGExLk1zZ1dpdGhkcmF3RGVsZWdhdG9yUmV3YXJkUmVzcG9uc2USnwEKG1dpdGhkcmF3VmFsaWRhdG9yQ29tbWlzc2lvbhI7LmNvc21vcy5kaXN0cmlidXRpb24udjFiZXRhMS5Nc2dXaXRoZHJhd1ZhbGlkYXRvckNvbW1pc3Npb24aQy5jb3Ntb3MuZGlzdHJpYnV0aW9uLnYxYmV0YTEuTXNnV2l0aGRyYXdWYWxpZGF0b3JDb21taXNzaW9uUmVzcG9uc2USgQEKEUZ1bmRDb21tdW5pdHlQb29sEjEuY29zbW9zLmRpc3RyaWJ1dGlvbi52MWJldGExLk1zZ0Z1bmRDb21tdW5pdHlQb29sGjkuY29zbW9zLmRpc3RyaWJ1dGlvbi52MWJldGExLk1zZ0Z1bmRDb21tdW5pdHlQb29sUmVzcG9uc2UScgoMVXBkYXRlUGFyYW1zEiwuY29zbW9zLmRpc3RyaWJ1dGlvbi52MWJldGExLk1zZ1VwZGF0ZVBhcmFtcxo0LmNvc21vcy5kaXN0cmlidXRpb24udjFiZXRhMS5Nc2dVcGRhdGVQYXJhbXNSZXNwb25zZRKEAQoSQ29tbXVuaXR5UG9vbFNwZW5kEjIuY29zbW9zLmRpc3RyaWJ1dGlvbi52MWJldGExLk1zZ0NvbW11bml0eVBvb2xTcGVuZBo6LmNvc21vcy5kaXN0cmlidXRpb24udjFiZXRhMS5Nc2dDb21tdW5pdHlQb29sU3BlbmRSZXNwb25zZRKfAQobRGVwb3NpdFZhbGlkYXRvclJld2FyZHNQb29sEjsuY29zbW9zLmRpc3RyaWJ1dGlvbi52MWJldGExLk1zZ0RlcG9zaXRWYWxpZGF0b3JSZXdhcmRzUG9vbBpDLmNvc21vcy5kaXN0cmlidXRpb24udjFiZXRhMS5Nc2dEZXBvc2l0VmFsaWRhdG9yUmV3YXJkc1Bvb2xSZXNwb25zZRoFgOewKgFCN1oxZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay94L2Rpc3RyaWJ1dGlvbi90eXBlc6jiHgFiBnByb3RvMw", [file_gogoproto_gogo, file_cosmos_base_v1beta1_coin, file_cosmos_proto_cosmos, file_cosmos_msg_v1_msg, file_amino_amino, file_cosmos_distribution_v1beta1_distribution]);

/**
 * MsgSetWithdrawAddress sets the withdraw address for
 * a delegator (or validator self-delegation).
 *
 * @generated from message cosmos.distribution.v1beta1.MsgSetWithdrawAddress
 */
export type MsgSetWithdrawAddress = Message<"cosmos.distribution.v1beta1.MsgSetWithdrawAddress"> & {
  /**
   * @generated from field: string delegator_address = 1;
   */
  delegatorAddress: string;

  /**
   * @generated from field: string withdraw_address = 2;
   */
  withdrawAddress: string;
};

/**
 * Describes the message cosmos.distribution.v1beta1.MsgSetWithdrawAddress.
 * Use `create(MsgSetWithdrawAddressSchema)` to create a new message.
 */
export const MsgSetWithdrawAddressSchema: GenMessage<MsgSetWithdrawAddress> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_tx, 0);

/**
 * MsgSetWithdrawAddressResponse defines the Msg/SetWithdrawAddress response
 * type.
 *
 * @generated from message cosmos.distribution.v1beta1.MsgSetWithdrawAddressResponse
 */
export type MsgSetWithdrawAddressResponse = Message<"cosmos.distribution.v1beta1.MsgSetWithdrawAddressResponse"> & {
};

/**
 * Describes the message cosmos.distribution.v1beta1.MsgSetWithdrawAddressResponse.
 * Use `create(MsgSetWithdrawAddressResponseSchema)` to create a new message.
 */
export const MsgSetWithdrawAddressResponseSchema: GenMessage<MsgSetWithdrawAddressResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_tx, 1);

/**
 * MsgWithdrawDelegatorReward represents delegation withdrawal to a delegator
 * from a single validator.
 *
 * @generated from message cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward
 */
export type MsgWithdrawDelegatorReward = Message<"cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward"> & {
  /**
   * @generated from field: string delegator_address = 1;
   */
  delegatorAddress: string;

  /**
   * @generated from field: string validator_address = 2;
   */
  validatorAddress: string;
};

/**
 * Describes the message cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward.
 * Use `create(MsgWithdrawDelegatorRewardSchema)` to create a new message.
 */
export const MsgWithdrawDelegatorRewardSchema: GenMessage<MsgWithdrawDelegatorReward> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_tx, 2);

/**
 * MsgWithdrawDelegatorRewardResponse defines the Msg/WithdrawDelegatorReward
 * response type.
 *
 * @generated from message cosmos.distribution.v1beta1.MsgWithdrawDelegatorRewardResponse
 */
export type MsgWithdrawDelegatorRewardResponse = Message<"cosmos.distribution.v1beta1.MsgWithdrawDelegatorRewardResponse"> & {
  /**
   * Since: cosmos-sdk 0.46
   *
   * @generated from field: repeated cosmos.base.v1beta1.Coin amount = 1;
   */
  amount: Coin[];
};

/**
 * Describes the message cosmos.distribution.v1beta1.MsgWithdrawDelegatorRewardResponse.
 * Use `create(MsgWithdrawDelegatorRewardResponseSchema)` to create a new message.
 */
export const MsgWithdrawDelegatorRewardResponseSchema: GenMessage<MsgWithdrawDelegatorRewardResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_tx, 3);

/**
 * MsgWithdrawValidatorCommission withdraws the full commission to the validator
 * address.
 *
 * @generated from message cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission
 */
export type MsgWithdrawValidatorCommission = Message<"cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission"> & {
  /**
   * @generated from field: string validator_address = 1;
   */
  validatorAddress: string;
};

/**
 * Describes the message cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission.
 * Use `create(MsgWithdrawValidatorCommissionSchema)` to create a new message.
 */
export const MsgWithdrawValidatorCommissionSchema: GenMessage<MsgWithdrawValidatorCommission> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_tx, 4);

/**
 * MsgWithdrawValidatorCommissionResponse defines the
 * Msg/WithdrawValidatorCommission response type.
 *
 * @generated from message cosmos.distribution.v1beta1.MsgWithdrawValidatorCommissionResponse
 */
export type MsgWithdrawValidatorCommissionResponse = Message<"cosmos.distribution.v1beta1.MsgWithdrawValidatorCommissionResponse"> & {
  /**
   * Since: cosmos-sdk 0.46
   *
   * @generated from field: repeated cosmos.base.v1beta1.Coin amount = 1;
   */
  amount: Coin[];
};

/**
 * Describes the message cosmos.distribution.v1beta1.MsgWithdrawValidatorCommissionResponse.
 * Use `create(MsgWithdrawValidatorCommissionResponseSchema)` to create a new message.
 */
export const MsgWithdrawValidatorCommissionResponseSchema: GenMessage<MsgWithdrawValidatorCommissionResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_tx, 5);

/**
 * MsgFundCommunityPool allows an account to directly
 * fund the community pool.
 *
 * @generated from message cosmos.distribution.v1beta1.MsgFundCommunityPool
 */
export type MsgFundCommunityPool = Message<"cosmos.distribution.v1beta1.MsgFundCommunityPool"> & {
  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin amount = 1;
   */
  amount: Coin[];

  /**
   * @generated from field: string depositor = 2;
   */
  depositor: string;
};

/**
 * Describes the message cosmos.distribution.v1beta1.MsgFundCommunityPool.
 * Use `create(MsgFundCommunityPoolSchema)` to create a new message.
 */
export const MsgFundCommunityPoolSchema: GenMessage<MsgFundCommunityPool> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_tx, 6);

/**
 * MsgFundCommunityPoolResponse defines the Msg/FundCommunityPool response type.
 *
 * @generated from message cosmos.distribution.v1beta1.MsgFundCommunityPoolResponse
 */
export type MsgFundCommunityPoolResponse = Message<"cosmos.distribution.v1beta1.MsgFundCommunityPoolResponse"> & {
};

/**
 * Describes the message cosmos.distribution.v1beta1.MsgFundCommunityPoolResponse.
 * Use `create(MsgFundCommunityPoolResponseSchema)` to create a new message.
 */
export const MsgFundCommunityPoolResponseSchema: GenMessage<MsgFundCommunityPoolResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_tx, 7);

/**
 * MsgUpdateParams is the Msg/UpdateParams request type.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message cosmos.distribution.v1beta1.MsgUpdateParams
 */
export type MsgUpdateParams = Message<"cosmos.distribution.v1beta1.MsgUpdateParams"> & {
  /**
   * authority is the address that controls the module (defaults to x/gov unless overwritten).
   *
   * @generated from field: string authority = 1;
   */
  authority: string;

  /**
   * params defines the x/distribution parameters to update.
   *
   * NOTE: All parameters must be supplied.
   *
   * @generated from field: cosmos.distribution.v1beta1.Params params = 2;
   */
  params?: Params;
};

/**
 * Describes the message cosmos.distribution.v1beta1.MsgUpdateParams.
 * Use `create(MsgUpdateParamsSchema)` to create a new message.
 */
export const MsgUpdateParamsSchema: GenMessage<MsgUpdateParams> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_tx, 8);

/**
 * MsgUpdateParamsResponse defines the response structure for executing a
 * MsgUpdateParams message.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message cosmos.distribution.v1beta1.MsgUpdateParamsResponse
 */
export type MsgUpdateParamsResponse = Message<"cosmos.distribution.v1beta1.MsgUpdateParamsResponse"> & {
};

/**
 * Describes the message cosmos.distribution.v1beta1.MsgUpdateParamsResponse.
 * Use `create(MsgUpdateParamsResponseSchema)` to create a new message.
 */
export const MsgUpdateParamsResponseSchema: GenMessage<MsgUpdateParamsResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_tx, 9);

/**
 * MsgCommunityPoolSpend defines a message for sending tokens from the community
 * pool to another account. This message is typically executed via a governance
 * proposal with the governance module being the executing authority.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message cosmos.distribution.v1beta1.MsgCommunityPoolSpend
 */
export type MsgCommunityPoolSpend = Message<"cosmos.distribution.v1beta1.MsgCommunityPoolSpend"> & {
  /**
   * authority is the address that controls the module (defaults to x/gov unless overwritten).
   *
   * @generated from field: string authority = 1;
   */
  authority: string;

  /**
   * @generated from field: string recipient = 2;
   */
  recipient: string;

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin amount = 3;
   */
  amount: Coin[];
};

/**
 * Describes the message cosmos.distribution.v1beta1.MsgCommunityPoolSpend.
 * Use `create(MsgCommunityPoolSpendSchema)` to create a new message.
 */
export const MsgCommunityPoolSpendSchema: GenMessage<MsgCommunityPoolSpend> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_tx, 10);

/**
 * MsgCommunityPoolSpendResponse defines the response to executing a
 * MsgCommunityPoolSpend message.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message cosmos.distribution.v1beta1.MsgCommunityPoolSpendResponse
 */
export type MsgCommunityPoolSpendResponse = Message<"cosmos.distribution.v1beta1.MsgCommunityPoolSpendResponse"> & {
};

/**
 * Describes the message cosmos.distribution.v1beta1.MsgCommunityPoolSpendResponse.
 * Use `create(MsgCommunityPoolSpendResponseSchema)` to create a new message.
 */
export const MsgCommunityPoolSpendResponseSchema: GenMessage<MsgCommunityPoolSpendResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_tx, 11);

/**
 * DepositValidatorRewardsPool defines the request structure to provide
 * additional rewards to delegators from a specific validator.
 *
 * Since: cosmos-sdk 0.50
 *
 * @generated from message cosmos.distribution.v1beta1.MsgDepositValidatorRewardsPool
 */
export type MsgDepositValidatorRewardsPool = Message<"cosmos.distribution.v1beta1.MsgDepositValidatorRewardsPool"> & {
  /**
   * @generated from field: string depositor = 1;
   */
  depositor: string;

  /**
   * @generated from field: string validator_address = 2;
   */
  validatorAddress: string;

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin amount = 3;
   */
  amount: Coin[];
};

/**
 * Describes the message cosmos.distribution.v1beta1.MsgDepositValidatorRewardsPool.
 * Use `create(MsgDepositValidatorRewardsPoolSchema)` to create a new message.
 */
export const MsgDepositValidatorRewardsPoolSchema: GenMessage<MsgDepositValidatorRewardsPool> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_tx, 12);

/**
 * MsgDepositValidatorRewardsPoolResponse defines the response to executing a
 * MsgDepositValidatorRewardsPool message.
 *
 * Since: cosmos-sdk 0.50
 *
 * @generated from message cosmos.distribution.v1beta1.MsgDepositValidatorRewardsPoolResponse
 */
export type MsgDepositValidatorRewardsPoolResponse = Message<"cosmos.distribution.v1beta1.MsgDepositValidatorRewardsPoolResponse"> & {
};

/**
 * Describes the message cosmos.distribution.v1beta1.MsgDepositValidatorRewardsPoolResponse.
 * Use `create(MsgDepositValidatorRewardsPoolResponseSchema)` to create a new message.
 */
export const MsgDepositValidatorRewardsPoolResponseSchema: GenMessage<MsgDepositValidatorRewardsPoolResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_distribution_v1beta1_tx, 13);

/**
 * Msg defines the distribution Msg service.
 *
 * @generated from service cosmos.distribution.v1beta1.Msg
 */
export const Msg: GenService<{
  /**
   * SetWithdrawAddress defines a method to change the withdraw address
   * for a delegator (or validator self-delegation).
   *
   * @generated from rpc cosmos.distribution.v1beta1.Msg.SetWithdrawAddress
   */
  setWithdrawAddress: {
    methodKind: "unary";
    input: typeof MsgSetWithdrawAddressSchema;
    output: typeof MsgSetWithdrawAddressResponseSchema;
  },
  /**
   * WithdrawDelegatorReward defines a method to withdraw rewards of delegator
   * from a single validator.
   *
   * @generated from rpc cosmos.distribution.v1beta1.Msg.WithdrawDelegatorReward
   */
  withdrawDelegatorReward: {
    methodKind: "unary";
    input: typeof MsgWithdrawDelegatorRewardSchema;
    output: typeof MsgWithdrawDelegatorRewardResponseSchema;
  },
  /**
   * WithdrawValidatorCommission defines a method to withdraw the
   * full commission to the validator address.
   *
   * @generated from rpc cosmos.distribution.v1beta1.Msg.WithdrawValidatorCommission
   */
  withdrawValidatorCommission: {
    methodKind: "unary";
    input: typeof MsgWithdrawValidatorCommissionSchema;
    output: typeof MsgWithdrawValidatorCommissionResponseSchema;
  },
  /**
   * FundCommunityPool defines a method to allow an account to directly
   * fund the community pool.
   *
   * @generated from rpc cosmos.distribution.v1beta1.Msg.FundCommunityPool
   */
  fundCommunityPool: {
    methodKind: "unary";
    input: typeof MsgFundCommunityPoolSchema;
    output: typeof MsgFundCommunityPoolResponseSchema;
  },
  /**
   * UpdateParams defines a governance operation for updating the x/distribution
   * module parameters. The authority is defined in the keeper.
   *
   * Since: cosmos-sdk 0.47
   *
   * @generated from rpc cosmos.distribution.v1beta1.Msg.UpdateParams
   */
  updateParams: {
    methodKind: "unary";
    input: typeof MsgUpdateParamsSchema;
    output: typeof MsgUpdateParamsResponseSchema;
  },
  /**
   * CommunityPoolSpend defines a governance operation for sending tokens from
   * the community pool in the x/distribution module to another account, which
   * could be the governance module itself. The authority is defined in the
   * keeper.
   *
   * Since: cosmos-sdk 0.47
   *
   * @generated from rpc cosmos.distribution.v1beta1.Msg.CommunityPoolSpend
   */
  communityPoolSpend: {
    methodKind: "unary";
    input: typeof MsgCommunityPoolSpendSchema;
    output: typeof MsgCommunityPoolSpendResponseSchema;
  },
  /**
   * DepositValidatorRewardsPool defines a method to provide additional rewards
   * to delegators to a specific validator.
   *
   * Since: cosmos-sdk 0.50
   *
   * @generated from rpc cosmos.distribution.v1beta1.Msg.DepositValidatorRewardsPool
   */
  depositValidatorRewardsPool: {
    methodKind: "unary";
    input: typeof MsgDepositValidatorRewardsPoolSchema;
    output: typeof MsgDepositValidatorRewardsPoolResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_cosmos_distribution_v1beta1_tx, 0);

