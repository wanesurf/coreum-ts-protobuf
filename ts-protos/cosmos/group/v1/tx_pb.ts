// Since: cosmos-sdk 0.46

// @generated by protoc-gen-es v2.0.0 with parameter "target=ts"
// @generated from file cosmos/group/v1/tx.proto (package cosmos.group.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_gogoproto_gogo } from "../../../gogoproto/gogo_pb";
import { file_cosmos_proto_cosmos } from "../../../cosmos_proto/cosmos_pb";
import type { Any } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any } from "@bufbuild/protobuf/wkt";
import type { MemberRequest, ProposalExecutorResult, VoteOption } from "./types_pb";
import { file_cosmos_group_v1_types } from "./types_pb";
import { file_cosmos_msg_v1_msg } from "../../msg/v1/msg_pb";
import { file_amino_amino } from "../../../amino/amino_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file cosmos/group/v1/tx.proto.
 */
export const file_cosmos_group_v1_tx: GenFile = /*@__PURE__*/
  fileDesc("Chhjb3Ntb3MvZ3JvdXAvdjEvdHgucHJvdG8SD2Nvc21vcy5ncm91cC52MSKxAQoOTXNnQ3JlYXRlR3JvdXASJwoFYWRtaW4YASABKAlCGNK0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZxI6CgdtZW1iZXJzGAIgAygLMh4uY29zbW9zLmdyb3VwLnYxLk1lbWJlclJlcXVlc3RCCcjeHwCo57AqARIQCghtZXRhZGF0YRgDIAEoCTooguewKgVhZG1pbornsCoZY29zbW9zLXNkay9Nc2dDcmVhdGVHcm91cCIqChZNc2dDcmVhdGVHcm91cFJlc3BvbnNlEhAKCGdyb3VwX2lkGAEgASgEIsYBChVNc2dVcGRhdGVHcm91cE1lbWJlcnMSJwoFYWRtaW4YASABKAlCGNK0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZxIQCghncm91cF9pZBgCIAEoBBJBCg5tZW1iZXJfdXBkYXRlcxgDIAMoCzIeLmNvc21vcy5ncm91cC52MS5NZW1iZXJSZXF1ZXN0QgnI3h8AqOewKgE6L4LnsCoFYWRtaW6K57AqIGNvc21vcy1zZGsvTXNnVXBkYXRlR3JvdXBNZW1iZXJzIh8KHU1zZ1VwZGF0ZUdyb3VwTWVtYmVyc1Jlc3BvbnNlIqwBChNNc2dVcGRhdGVHcm91cEFkbWluEicKBWFkbWluGAEgASgJQhjStC0UY29zbW9zLkFkZHJlc3NTdHJpbmcSEAoIZ3JvdXBfaWQYAiABKAQSKwoJbmV3X2FkbWluGAMgASgJQhjStC0UY29zbW9zLkFkZHJlc3NTdHJpbmc6LYLnsCoFYWRtaW6K57AqHmNvc21vcy1zZGsvTXNnVXBkYXRlR3JvdXBBZG1pbiIdChtNc2dVcGRhdGVHcm91cEFkbWluUmVzcG9uc2UilwEKFk1zZ1VwZGF0ZUdyb3VwTWV0YWRhdGESJwoFYWRtaW4YASABKAlCGNK0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZxIQCghncm91cF9pZBgCIAEoBBIQCghtZXRhZGF0YRgDIAEoCTowguewKgVhZG1pbornsCohY29zbW9zLXNkay9Nc2dVcGRhdGVHcm91cE1ldGFkYXRhIiAKHk1zZ1VwZGF0ZUdyb3VwTWV0YWRhdGFSZXNwb25zZSLqAQoUTXNnQ3JlYXRlR3JvdXBQb2xpY3kSJwoFYWRtaW4YASABKAlCGNK0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZxIQCghncm91cF9pZBgCIAEoBBIQCghtZXRhZGF0YRgDIAEoCRJRCg9kZWNpc2lvbl9wb2xpY3kYBCABKAsyFC5nb29nbGUucHJvdG9idWYuQW55QiLKtC0eY29zbW9zLmdyb3VwLnYxLkRlY2lzaW9uUG9saWN5OjKIoB8AguewKgVhZG1pbornsCofY29zbW9zLXNkay9Nc2dDcmVhdGVHcm91cFBvbGljeSJJChxNc2dDcmVhdGVHcm91cFBvbGljeVJlc3BvbnNlEikKB2FkZHJlc3MYASABKAlCGNK0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZyLeAQoZTXNnVXBkYXRlR3JvdXBQb2xpY3lBZG1pbhInCgVhZG1pbhgBIAEoCUIY0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nEjYKFGdyb3VwX3BvbGljeV9hZGRyZXNzGAIgASgJQhjStC0UY29zbW9zLkFkZHJlc3NTdHJpbmcSKwoJbmV3X2FkbWluGAMgASgJQhjStC0UY29zbW9zLkFkZHJlc3NTdHJpbmc6M4LnsCoFYWRtaW6K57AqJGNvc21vcy1zZGsvTXNnVXBkYXRlR3JvdXBQb2xpY3lBZG1pbiIjCiFNc2dVcGRhdGVHcm91cFBvbGljeUFkbWluUmVzcG9uc2Ui4AIKGE1zZ0NyZWF0ZUdyb3VwV2l0aFBvbGljeRInCgVhZG1pbhgBIAEoCUIY0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nEjoKB21lbWJlcnMYAiADKAsyHi5jb3Ntb3MuZ3JvdXAudjEuTWVtYmVyUmVxdWVzdEIJyN4fAKjnsCoBEhYKDmdyb3VwX21ldGFkYXRhGAMgASgJEh0KFWdyb3VwX3BvbGljeV9tZXRhZGF0YRgEIAEoCRIdChVncm91cF9wb2xpY3lfYXNfYWRtaW4YBSABKAgSUQoPZGVjaXNpb25fcG9saWN5GAYgASgLMhQuZ29vZ2xlLnByb3RvYnVmLkFueUIiyrQtHmNvc21vcy5ncm91cC52MS5EZWNpc2lvblBvbGljeTo2iKAfAILnsCoFYWRtaW6K57AqI2Nvc21vcy1zZGsvTXNnQ3JlYXRlR3JvdXBXaXRoUG9saWN5ImwKIE1zZ0NyZWF0ZUdyb3VwV2l0aFBvbGljeVJlc3BvbnNlEhAKCGdyb3VwX2lkGAEgASgEEjYKFGdyb3VwX3BvbGljeV9hZGRyZXNzGAIgASgJQhjStC0UY29zbW9zLkFkZHJlc3NTdHJpbmcilAIKIk1zZ1VwZGF0ZUdyb3VwUG9saWN5RGVjaXNpb25Qb2xpY3kSJwoFYWRtaW4YASABKAlCGNK0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZxI2ChRncm91cF9wb2xpY3lfYWRkcmVzcxgCIAEoCUIY0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nElEKD2RlY2lzaW9uX3BvbGljeRgDIAEoCzIULmdvb2dsZS5wcm90b2J1Zi5BbnlCIsq0LR5jb3Ntb3MuZ3JvdXAudjEuRGVjaXNpb25Qb2xpY3k6OoigHwCC57AqBWFkbWluiuewKidjb3Ntb3Mtc2RrL01zZ1VwZGF0ZUdyb3VwRGVjaXNpb25Qb2xpY3kiLAoqTXNnVXBkYXRlR3JvdXBQb2xpY3lEZWNpc2lvblBvbGljeVJlc3BvbnNlIskBChxNc2dVcGRhdGVHcm91cFBvbGljeU1ldGFkYXRhEicKBWFkbWluGAEgASgJQhjStC0UY29zbW9zLkFkZHJlc3NTdHJpbmcSNgoUZ3JvdXBfcG9saWN5X2FkZHJlc3MYAiABKAlCGNK0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZxIQCghtZXRhZGF0YRgDIAEoCTo2guewKgVhZG1pbornsConY29zbW9zLXNkay9Nc2dVcGRhdGVHcm91cFBvbGljeU1ldGFkYXRhIiYKJE1zZ1VwZGF0ZUdyb3VwUG9saWN5TWV0YWRhdGFSZXNwb25zZSKYAgoRTXNnU3VibWl0UHJvcG9zYWwSNgoUZ3JvdXBfcG9saWN5X2FkZHJlc3MYASABKAlCGNK0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZxIRCglwcm9wb3NlcnMYAiADKAkSEAoIbWV0YWRhdGEYAyABKAkSJgoIbWVzc2FnZXMYBCADKAsyFC5nb29nbGUucHJvdG9idWYuQW55EiMKBGV4ZWMYBSABKA4yFS5jb3Ntb3MuZ3JvdXAudjEuRXhlYxINCgV0aXRsZRgGIAEoCRIPCgdzdW1tYXJ5GAcgASgJOjmIoB8AguewKglwcm9wb3NlcnOK57AqImNvc21vcy1zZGsvZ3JvdXAvTXNnU3VibWl0UHJvcG9zYWwiMAoZTXNnU3VibWl0UHJvcG9zYWxSZXNwb25zZRITCgtwcm9wb3NhbF9pZBgBIAEoBCKMAQoTTXNnV2l0aGRyYXdQcm9wb3NhbBITCgtwcm9wb3NhbF9pZBgBIAEoBBIpCgdhZGRyZXNzGAIgASgJQhjStC0UY29zbW9zLkFkZHJlc3NTdHJpbmc6NYLnsCoHYWRkcmVzc4rnsCokY29zbW9zLXNkay9ncm91cC9Nc2dXaXRoZHJhd1Byb3Bvc2FsIh0KG01zZ1dpdGhkcmF3UHJvcG9zYWxSZXNwb25zZSLUAQoHTXNnVm90ZRITCgtwcm9wb3NhbF9pZBgBIAEoBBInCgV2b3RlchgCIAEoCUIY0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nEisKBm9wdGlvbhgDIAEoDjIbLmNvc21vcy5ncm91cC52MS5Wb3RlT3B0aW9uEhAKCG1ldGFkYXRhGAQgASgJEiMKBGV4ZWMYBSABKA4yFS5jb3Ntb3MuZ3JvdXAudjEuRXhlYzonguewKgV2b3RlcornsCoYY29zbW9zLXNkay9ncm91cC9Nc2dWb3RlIhEKD01zZ1ZvdGVSZXNwb25zZSJ2CgdNc2dFeGVjEhMKC3Byb3Bvc2FsX2lkGAEgASgEEioKCGV4ZWN1dG9yGAIgASgJQhjStC0UY29zbW9zLkFkZHJlc3NTdHJpbmc6KoLnsCoIZXhlY3V0b3KK57AqGGNvc21vcy1zZGsvZ3JvdXAvTXNnRXhlYyJKCg9Nc2dFeGVjUmVzcG9uc2USNwoGcmVzdWx0GAIgASgOMicuY29zbW9zLmdyb3VwLnYxLlByb3Bvc2FsRXhlY3V0b3JSZXN1bHQifQoNTXNnTGVhdmVHcm91cBIpCgdhZGRyZXNzGAEgASgJQhjStC0UY29zbW9zLkFkZHJlc3NTdHJpbmcSEAoIZ3JvdXBfaWQYAiABKAQ6L4LnsCoHYWRkcmVzc4rnsCoeY29zbW9zLXNkay9ncm91cC9Nc2dMZWF2ZUdyb3VwIhcKFU1zZ0xlYXZlR3JvdXBSZXNwb25zZSoqCgRFeGVjEhQKEEVYRUNfVU5TUEVDSUZJRUQQABIMCghFWEVDX1RSWRABMsoLCgNNc2cSVwoLQ3JlYXRlR3JvdXASHy5jb3Ntb3MuZ3JvdXAudjEuTXNnQ3JlYXRlR3JvdXAaJy5jb3Ntb3MuZ3JvdXAudjEuTXNnQ3JlYXRlR3JvdXBSZXNwb25zZRJsChJVcGRhdGVHcm91cE1lbWJlcnMSJi5jb3Ntb3MuZ3JvdXAudjEuTXNnVXBkYXRlR3JvdXBNZW1iZXJzGi4uY29zbW9zLmdyb3VwLnYxLk1zZ1VwZGF0ZUdyb3VwTWVtYmVyc1Jlc3BvbnNlEmYKEFVwZGF0ZUdyb3VwQWRtaW4SJC5jb3Ntb3MuZ3JvdXAudjEuTXNnVXBkYXRlR3JvdXBBZG1pbhosLmNvc21vcy5ncm91cC52MS5Nc2dVcGRhdGVHcm91cEFkbWluUmVzcG9uc2USbwoTVXBkYXRlR3JvdXBNZXRhZGF0YRInLmNvc21vcy5ncm91cC52MS5Nc2dVcGRhdGVHcm91cE1ldGFkYXRhGi8uY29zbW9zLmdyb3VwLnYxLk1zZ1VwZGF0ZUdyb3VwTWV0YWRhdGFSZXNwb25zZRJpChFDcmVhdGVHcm91cFBvbGljeRIlLmNvc21vcy5ncm91cC52MS5Nc2dDcmVhdGVHcm91cFBvbGljeRotLmNvc21vcy5ncm91cC52MS5Nc2dDcmVhdGVHcm91cFBvbGljeVJlc3BvbnNlEnUKFUNyZWF0ZUdyb3VwV2l0aFBvbGljeRIpLmNvc21vcy5ncm91cC52MS5Nc2dDcmVhdGVHcm91cFdpdGhQb2xpY3kaMS5jb3Ntb3MuZ3JvdXAudjEuTXNnQ3JlYXRlR3JvdXBXaXRoUG9saWN5UmVzcG9uc2USeAoWVXBkYXRlR3JvdXBQb2xpY3lBZG1pbhIqLmNvc21vcy5ncm91cC52MS5Nc2dVcGRhdGVHcm91cFBvbGljeUFkbWluGjIuY29zbW9zLmdyb3VwLnYxLk1zZ1VwZGF0ZUdyb3VwUG9saWN5QWRtaW5SZXNwb25zZRKTAQofVXBkYXRlR3JvdXBQb2xpY3lEZWNpc2lvblBvbGljeRIzLmNvc21vcy5ncm91cC52MS5Nc2dVcGRhdGVHcm91cFBvbGljeURlY2lzaW9uUG9saWN5GjsuY29zbW9zLmdyb3VwLnYxLk1zZ1VwZGF0ZUdyb3VwUG9saWN5RGVjaXNpb25Qb2xpY3lSZXNwb25zZRKBAQoZVXBkYXRlR3JvdXBQb2xpY3lNZXRhZGF0YRItLmNvc21vcy5ncm91cC52MS5Nc2dVcGRhdGVHcm91cFBvbGljeU1ldGFkYXRhGjUuY29zbW9zLmdyb3VwLnYxLk1zZ1VwZGF0ZUdyb3VwUG9saWN5TWV0YWRhdGFSZXNwb25zZRJgCg5TdWJtaXRQcm9wb3NhbBIiLmNvc21vcy5ncm91cC52MS5Nc2dTdWJtaXRQcm9wb3NhbBoqLmNvc21vcy5ncm91cC52MS5Nc2dTdWJtaXRQcm9wb3NhbFJlc3BvbnNlEmYKEFdpdGhkcmF3UHJvcG9zYWwSJC5jb3Ntb3MuZ3JvdXAudjEuTXNnV2l0aGRyYXdQcm9wb3NhbBosLmNvc21vcy5ncm91cC52MS5Nc2dXaXRoZHJhd1Byb3Bvc2FsUmVzcG9uc2USQgoEVm90ZRIYLmNvc21vcy5ncm91cC52MS5Nc2dWb3RlGiAuY29zbW9zLmdyb3VwLnYxLk1zZ1ZvdGVSZXNwb25zZRJCCgRFeGVjEhguY29zbW9zLmdyb3VwLnYxLk1zZ0V4ZWMaIC5jb3Ntb3MuZ3JvdXAudjEuTXNnRXhlY1Jlc3BvbnNlElQKCkxlYXZlR3JvdXASHi5jb3Ntb3MuZ3JvdXAudjEuTXNnTGVhdmVHcm91cBomLmNvc21vcy5ncm91cC52MS5Nc2dMZWF2ZUdyb3VwUmVzcG9uc2UaBYDnsCoBQiZaJGdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsveC9ncm91cGIGcHJvdG8z", [file_gogoproto_gogo, file_cosmos_proto_cosmos, file_google_protobuf_any, file_cosmos_group_v1_types, file_cosmos_msg_v1_msg, file_amino_amino]);

/**
 * MsgCreateGroup is the Msg/CreateGroup request type.
 *
 * @generated from message cosmos.group.v1.MsgCreateGroup
 */
export type MsgCreateGroup = Message<"cosmos.group.v1.MsgCreateGroup"> & {
  /**
   * admin is the account address of the group admin.
   *
   * @generated from field: string admin = 1;
   */
  admin: string;

  /**
   * members defines the group members.
   *
   * @generated from field: repeated cosmos.group.v1.MemberRequest members = 2;
   */
  members: MemberRequest[];

  /**
   * metadata is any arbitrary metadata to attached to the group.
   *
   * @generated from field: string metadata = 3;
   */
  metadata: string;
};

/**
 * Describes the message cosmos.group.v1.MsgCreateGroup.
 * Use `create(MsgCreateGroupSchema)` to create a new message.
 */
export const MsgCreateGroupSchema: GenMessage<MsgCreateGroup> = /*@__PURE__*/
  messageDesc(file_cosmos_group_v1_tx, 0);

/**
 * MsgCreateGroupResponse is the Msg/CreateGroup response type.
 *
 * @generated from message cosmos.group.v1.MsgCreateGroupResponse
 */
export type MsgCreateGroupResponse = Message<"cosmos.group.v1.MsgCreateGroupResponse"> & {
  /**
   * group_id is the unique ID of the newly created group.
   *
   * @generated from field: uint64 group_id = 1;
   */
  groupId: bigint;
};

/**
 * Describes the message cosmos.group.v1.MsgCreateGroupResponse.
 * Use `create(MsgCreateGroupResponseSchema)` to create a new message.
 */
export const MsgCreateGroupResponseSchema: GenMessage<MsgCreateGroupResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_group_v1_tx, 1);

/**
 * MsgUpdateGroupMembers is the Msg/UpdateGroupMembers request type.
 *
 * @generated from message cosmos.group.v1.MsgUpdateGroupMembers
 */
export type MsgUpdateGroupMembers = Message<"cosmos.group.v1.MsgUpdateGroupMembers"> & {
  /**
   * admin is the account address of the group admin.
   *
   * @generated from field: string admin = 1;
   */
  admin: string;

  /**
   * group_id is the unique ID of the group.
   *
   * @generated from field: uint64 group_id = 2;
   */
  groupId: bigint;

  /**
   * member_updates is the list of members to update,
   * set weight to 0 to remove a member.
   *
   * @generated from field: repeated cosmos.group.v1.MemberRequest member_updates = 3;
   */
  memberUpdates: MemberRequest[];
};

/**
 * Describes the message cosmos.group.v1.MsgUpdateGroupMembers.
 * Use `create(MsgUpdateGroupMembersSchema)` to create a new message.
 */
export const MsgUpdateGroupMembersSchema: GenMessage<MsgUpdateGroupMembers> = /*@__PURE__*/
  messageDesc(file_cosmos_group_v1_tx, 2);

/**
 * MsgUpdateGroupMembersResponse is the Msg/UpdateGroupMembers response type.
 *
 * @generated from message cosmos.group.v1.MsgUpdateGroupMembersResponse
 */
export type MsgUpdateGroupMembersResponse = Message<"cosmos.group.v1.MsgUpdateGroupMembersResponse"> & {
};

/**
 * Describes the message cosmos.group.v1.MsgUpdateGroupMembersResponse.
 * Use `create(MsgUpdateGroupMembersResponseSchema)` to create a new message.
 */
export const MsgUpdateGroupMembersResponseSchema: GenMessage<MsgUpdateGroupMembersResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_group_v1_tx, 3);

/**
 * MsgUpdateGroupAdmin is the Msg/UpdateGroupAdmin request type.
 *
 * @generated from message cosmos.group.v1.MsgUpdateGroupAdmin
 */
export type MsgUpdateGroupAdmin = Message<"cosmos.group.v1.MsgUpdateGroupAdmin"> & {
  /**
   * admin is the current account address of the group admin.
   *
   * @generated from field: string admin = 1;
   */
  admin: string;

  /**
   * group_id is the unique ID of the group.
   *
   * @generated from field: uint64 group_id = 2;
   */
  groupId: bigint;

  /**
   * new_admin is the group new admin account address.
   *
   * @generated from field: string new_admin = 3;
   */
  newAdmin: string;
};

/**
 * Describes the message cosmos.group.v1.MsgUpdateGroupAdmin.
 * Use `create(MsgUpdateGroupAdminSchema)` to create a new message.
 */
export const MsgUpdateGroupAdminSchema: GenMessage<MsgUpdateGroupAdmin> = /*@__PURE__*/
  messageDesc(file_cosmos_group_v1_tx, 4);

/**
 * MsgUpdateGroupAdminResponse is the Msg/UpdateGroupAdmin response type.
 *
 * @generated from message cosmos.group.v1.MsgUpdateGroupAdminResponse
 */
export type MsgUpdateGroupAdminResponse = Message<"cosmos.group.v1.MsgUpdateGroupAdminResponse"> & {
};

/**
 * Describes the message cosmos.group.v1.MsgUpdateGroupAdminResponse.
 * Use `create(MsgUpdateGroupAdminResponseSchema)` to create a new message.
 */
export const MsgUpdateGroupAdminResponseSchema: GenMessage<MsgUpdateGroupAdminResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_group_v1_tx, 5);

/**
 * MsgUpdateGroupMetadata is the Msg/UpdateGroupMetadata request type.
 *
 * @generated from message cosmos.group.v1.MsgUpdateGroupMetadata
 */
export type MsgUpdateGroupMetadata = Message<"cosmos.group.v1.MsgUpdateGroupMetadata"> & {
  /**
   * admin is the account address of the group admin.
   *
   * @generated from field: string admin = 1;
   */
  admin: string;

  /**
   * group_id is the unique ID of the group.
   *
   * @generated from field: uint64 group_id = 2;
   */
  groupId: bigint;

  /**
   * metadata is the updated group's metadata.
   *
   * @generated from field: string metadata = 3;
   */
  metadata: string;
};

/**
 * Describes the message cosmos.group.v1.MsgUpdateGroupMetadata.
 * Use `create(MsgUpdateGroupMetadataSchema)` to create a new message.
 */
export const MsgUpdateGroupMetadataSchema: GenMessage<MsgUpdateGroupMetadata> = /*@__PURE__*/
  messageDesc(file_cosmos_group_v1_tx, 6);

/**
 * MsgUpdateGroupMetadataResponse is the Msg/UpdateGroupMetadata response type.
 *
 * @generated from message cosmos.group.v1.MsgUpdateGroupMetadataResponse
 */
export type MsgUpdateGroupMetadataResponse = Message<"cosmos.group.v1.MsgUpdateGroupMetadataResponse"> & {
};

/**
 * Describes the message cosmos.group.v1.MsgUpdateGroupMetadataResponse.
 * Use `create(MsgUpdateGroupMetadataResponseSchema)` to create a new message.
 */
export const MsgUpdateGroupMetadataResponseSchema: GenMessage<MsgUpdateGroupMetadataResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_group_v1_tx, 7);

/**
 * MsgCreateGroupPolicy is the Msg/CreateGroupPolicy request type.
 *
 * @generated from message cosmos.group.v1.MsgCreateGroupPolicy
 */
export type MsgCreateGroupPolicy = Message<"cosmos.group.v1.MsgCreateGroupPolicy"> & {
  /**
   * admin is the account address of the group admin.
   *
   * @generated from field: string admin = 1;
   */
  admin: string;

  /**
   * group_id is the unique ID of the group.
   *
   * @generated from field: uint64 group_id = 2;
   */
  groupId: bigint;

  /**
   * metadata is any arbitrary metadata attached to the group policy.
   *
   * @generated from field: string metadata = 3;
   */
  metadata: string;

  /**
   * decision_policy specifies the group policy's decision policy.
   *
   * @generated from field: google.protobuf.Any decision_policy = 4;
   */
  decisionPolicy?: Any;
};

/**
 * Describes the message cosmos.group.v1.MsgCreateGroupPolicy.
 * Use `create(MsgCreateGroupPolicySchema)` to create a new message.
 */
export const MsgCreateGroupPolicySchema: GenMessage<MsgCreateGroupPolicy> = /*@__PURE__*/
  messageDesc(file_cosmos_group_v1_tx, 8);

/**
 * MsgCreateGroupPolicyResponse is the Msg/CreateGroupPolicy response type.
 *
 * @generated from message cosmos.group.v1.MsgCreateGroupPolicyResponse
 */
export type MsgCreateGroupPolicyResponse = Message<"cosmos.group.v1.MsgCreateGroupPolicyResponse"> & {
  /**
   * address is the account address of the newly created group policy.
   *
   * @generated from field: string address = 1;
   */
  address: string;
};

/**
 * Describes the message cosmos.group.v1.MsgCreateGroupPolicyResponse.
 * Use `create(MsgCreateGroupPolicyResponseSchema)` to create a new message.
 */
export const MsgCreateGroupPolicyResponseSchema: GenMessage<MsgCreateGroupPolicyResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_group_v1_tx, 9);

/**
 * MsgUpdateGroupPolicyAdmin is the Msg/UpdateGroupPolicyAdmin request type.
 *
 * @generated from message cosmos.group.v1.MsgUpdateGroupPolicyAdmin
 */
export type MsgUpdateGroupPolicyAdmin = Message<"cosmos.group.v1.MsgUpdateGroupPolicyAdmin"> & {
  /**
   * admin is the account address of the group admin.
   *
   * @generated from field: string admin = 1;
   */
  admin: string;

  /**
   * group_policy_address is the account address of the group policy.
   *
   * @generated from field: string group_policy_address = 2;
   */
  groupPolicyAddress: string;

  /**
   * new_admin is the new group policy admin.
   *
   * @generated from field: string new_admin = 3;
   */
  newAdmin: string;
};

/**
 * Describes the message cosmos.group.v1.MsgUpdateGroupPolicyAdmin.
 * Use `create(MsgUpdateGroupPolicyAdminSchema)` to create a new message.
 */
export const MsgUpdateGroupPolicyAdminSchema: GenMessage<MsgUpdateGroupPolicyAdmin> = /*@__PURE__*/
  messageDesc(file_cosmos_group_v1_tx, 10);

/**
 * MsgUpdateGroupPolicyAdminResponse is the Msg/UpdateGroupPolicyAdmin response type.
 *
 * @generated from message cosmos.group.v1.MsgUpdateGroupPolicyAdminResponse
 */
export type MsgUpdateGroupPolicyAdminResponse = Message<"cosmos.group.v1.MsgUpdateGroupPolicyAdminResponse"> & {
};

/**
 * Describes the message cosmos.group.v1.MsgUpdateGroupPolicyAdminResponse.
 * Use `create(MsgUpdateGroupPolicyAdminResponseSchema)` to create a new message.
 */
export const MsgUpdateGroupPolicyAdminResponseSchema: GenMessage<MsgUpdateGroupPolicyAdminResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_group_v1_tx, 11);

/**
 * MsgCreateGroupWithPolicy is the Msg/CreateGroupWithPolicy request type.
 *
 * @generated from message cosmos.group.v1.MsgCreateGroupWithPolicy
 */
export type MsgCreateGroupWithPolicy = Message<"cosmos.group.v1.MsgCreateGroupWithPolicy"> & {
  /**
   * admin is the account address of the group and group policy admin.
   *
   * @generated from field: string admin = 1;
   */
  admin: string;

  /**
   * members defines the group members.
   *
   * @generated from field: repeated cosmos.group.v1.MemberRequest members = 2;
   */
  members: MemberRequest[];

  /**
   * group_metadata is any arbitrary metadata attached to the group.
   *
   * @generated from field: string group_metadata = 3;
   */
  groupMetadata: string;

  /**
   * group_policy_metadata is any arbitrary metadata attached to the group policy.
   *
   * @generated from field: string group_policy_metadata = 4;
   */
  groupPolicyMetadata: string;

  /**
   * group_policy_as_admin is a boolean field, if set to true, the group policy account address will be used as group
   * and group policy admin.
   *
   * @generated from field: bool group_policy_as_admin = 5;
   */
  groupPolicyAsAdmin: boolean;

  /**
   * decision_policy specifies the group policy's decision policy.
   *
   * @generated from field: google.protobuf.Any decision_policy = 6;
   */
  decisionPolicy?: Any;
};

/**
 * Describes the message cosmos.group.v1.MsgCreateGroupWithPolicy.
 * Use `create(MsgCreateGroupWithPolicySchema)` to create a new message.
 */
export const MsgCreateGroupWithPolicySchema: GenMessage<MsgCreateGroupWithPolicy> = /*@__PURE__*/
  messageDesc(file_cosmos_group_v1_tx, 12);

/**
 * MsgCreateGroupWithPolicyResponse is the Msg/CreateGroupWithPolicy response type.
 *
 * @generated from message cosmos.group.v1.MsgCreateGroupWithPolicyResponse
 */
export type MsgCreateGroupWithPolicyResponse = Message<"cosmos.group.v1.MsgCreateGroupWithPolicyResponse"> & {
  /**
   * group_id is the unique ID of the newly created group with policy.
   *
   * @generated from field: uint64 group_id = 1;
   */
  groupId: bigint;

  /**
   * group_policy_address is the account address of the newly created group policy.
   *
   * @generated from field: string group_policy_address = 2;
   */
  groupPolicyAddress: string;
};

/**
 * Describes the message cosmos.group.v1.MsgCreateGroupWithPolicyResponse.
 * Use `create(MsgCreateGroupWithPolicyResponseSchema)` to create a new message.
 */
export const MsgCreateGroupWithPolicyResponseSchema: GenMessage<MsgCreateGroupWithPolicyResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_group_v1_tx, 13);

/**
 * MsgUpdateGroupPolicyDecisionPolicy is the Msg/UpdateGroupPolicyDecisionPolicy request type.
 *
 * @generated from message cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy
 */
export type MsgUpdateGroupPolicyDecisionPolicy = Message<"cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy"> & {
  /**
   * admin is the account address of the group admin.
   *
   * @generated from field: string admin = 1;
   */
  admin: string;

  /**
   * group_policy_address is the account address of group policy.
   *
   * @generated from field: string group_policy_address = 2;
   */
  groupPolicyAddress: string;

  /**
   * decision_policy is the updated group policy's decision policy.
   *
   * @generated from field: google.protobuf.Any decision_policy = 3;
   */
  decisionPolicy?: Any;
};

/**
 * Describes the message cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy.
 * Use `create(MsgUpdateGroupPolicyDecisionPolicySchema)` to create a new message.
 */
export const MsgUpdateGroupPolicyDecisionPolicySchema: GenMessage<MsgUpdateGroupPolicyDecisionPolicy> = /*@__PURE__*/
  messageDesc(file_cosmos_group_v1_tx, 14);

/**
 * MsgUpdateGroupPolicyDecisionPolicyResponse is the Msg/UpdateGroupPolicyDecisionPolicy response type.
 *
 * @generated from message cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicyResponse
 */
export type MsgUpdateGroupPolicyDecisionPolicyResponse = Message<"cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicyResponse"> & {
};

/**
 * Describes the message cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicyResponse.
 * Use `create(MsgUpdateGroupPolicyDecisionPolicyResponseSchema)` to create a new message.
 */
export const MsgUpdateGroupPolicyDecisionPolicyResponseSchema: GenMessage<MsgUpdateGroupPolicyDecisionPolicyResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_group_v1_tx, 15);

/**
 * MsgUpdateGroupPolicyMetadata is the Msg/UpdateGroupPolicyMetadata request type.
 *
 * @generated from message cosmos.group.v1.MsgUpdateGroupPolicyMetadata
 */
export type MsgUpdateGroupPolicyMetadata = Message<"cosmos.group.v1.MsgUpdateGroupPolicyMetadata"> & {
  /**
   * admin is the account address of the group admin.
   *
   * @generated from field: string admin = 1;
   */
  admin: string;

  /**
   * group_policy_address is the account address of group policy.
   *
   * @generated from field: string group_policy_address = 2;
   */
  groupPolicyAddress: string;

  /**
   * metadata is the group policy metadata to be updated.
   *
   * @generated from field: string metadata = 3;
   */
  metadata: string;
};

/**
 * Describes the message cosmos.group.v1.MsgUpdateGroupPolicyMetadata.
 * Use `create(MsgUpdateGroupPolicyMetadataSchema)` to create a new message.
 */
export const MsgUpdateGroupPolicyMetadataSchema: GenMessage<MsgUpdateGroupPolicyMetadata> = /*@__PURE__*/
  messageDesc(file_cosmos_group_v1_tx, 16);

/**
 * MsgUpdateGroupPolicyMetadataResponse is the Msg/UpdateGroupPolicyMetadata response type.
 *
 * @generated from message cosmos.group.v1.MsgUpdateGroupPolicyMetadataResponse
 */
export type MsgUpdateGroupPolicyMetadataResponse = Message<"cosmos.group.v1.MsgUpdateGroupPolicyMetadataResponse"> & {
};

/**
 * Describes the message cosmos.group.v1.MsgUpdateGroupPolicyMetadataResponse.
 * Use `create(MsgUpdateGroupPolicyMetadataResponseSchema)` to create a new message.
 */
export const MsgUpdateGroupPolicyMetadataResponseSchema: GenMessage<MsgUpdateGroupPolicyMetadataResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_group_v1_tx, 17);

/**
 * MsgSubmitProposal is the Msg/SubmitProposal request type.
 *
 * @generated from message cosmos.group.v1.MsgSubmitProposal
 */
export type MsgSubmitProposal = Message<"cosmos.group.v1.MsgSubmitProposal"> & {
  /**
   * group_policy_address is the account address of group policy.
   *
   * @generated from field: string group_policy_address = 1;
   */
  groupPolicyAddress: string;

  /**
   * proposers are the account addresses of the proposers.
   * Proposers signatures will be counted as yes votes.
   *
   * @generated from field: repeated string proposers = 2;
   */
  proposers: string[];

  /**
   * metadata is any arbitrary metadata attached to the proposal.
   *
   * @generated from field: string metadata = 3;
   */
  metadata: string;

  /**
   * messages is a list of `sdk.Msg`s that will be executed if the proposal passes.
   *
   * @generated from field: repeated google.protobuf.Any messages = 4;
   */
  messages: Any[];

  /**
   * exec defines the mode of execution of the proposal,
   * whether it should be executed immediately on creation or not.
   * If so, proposers signatures are considered as Yes votes.
   *
   * @generated from field: cosmos.group.v1.Exec exec = 5;
   */
  exec: Exec;

  /**
   * title is the title of the proposal.
   *
   * Since: cosmos-sdk 0.47
   *
   * @generated from field: string title = 6;
   */
  title: string;

  /**
   * summary is the summary of the proposal.
   *
   * Since: cosmos-sdk 0.47
   *
   * @generated from field: string summary = 7;
   */
  summary: string;
};

/**
 * Describes the message cosmos.group.v1.MsgSubmitProposal.
 * Use `create(MsgSubmitProposalSchema)` to create a new message.
 */
export const MsgSubmitProposalSchema: GenMessage<MsgSubmitProposal> = /*@__PURE__*/
  messageDesc(file_cosmos_group_v1_tx, 18);

/**
 * MsgSubmitProposalResponse is the Msg/SubmitProposal response type.
 *
 * @generated from message cosmos.group.v1.MsgSubmitProposalResponse
 */
export type MsgSubmitProposalResponse = Message<"cosmos.group.v1.MsgSubmitProposalResponse"> & {
  /**
   * proposal is the unique ID of the proposal.
   *
   * @generated from field: uint64 proposal_id = 1;
   */
  proposalId: bigint;
};

/**
 * Describes the message cosmos.group.v1.MsgSubmitProposalResponse.
 * Use `create(MsgSubmitProposalResponseSchema)` to create a new message.
 */
export const MsgSubmitProposalResponseSchema: GenMessage<MsgSubmitProposalResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_group_v1_tx, 19);

/**
 * MsgWithdrawProposal is the Msg/WithdrawProposal request type.
 *
 * @generated from message cosmos.group.v1.MsgWithdrawProposal
 */
export type MsgWithdrawProposal = Message<"cosmos.group.v1.MsgWithdrawProposal"> & {
  /**
   * proposal is the unique ID of the proposal.
   *
   * @generated from field: uint64 proposal_id = 1;
   */
  proposalId: bigint;

  /**
   * address is the admin of the group policy or one of the proposer of the proposal.
   *
   * @generated from field: string address = 2;
   */
  address: string;
};

/**
 * Describes the message cosmos.group.v1.MsgWithdrawProposal.
 * Use `create(MsgWithdrawProposalSchema)` to create a new message.
 */
export const MsgWithdrawProposalSchema: GenMessage<MsgWithdrawProposal> = /*@__PURE__*/
  messageDesc(file_cosmos_group_v1_tx, 20);

/**
 * MsgWithdrawProposalResponse is the Msg/WithdrawProposal response type.
 *
 * @generated from message cosmos.group.v1.MsgWithdrawProposalResponse
 */
export type MsgWithdrawProposalResponse = Message<"cosmos.group.v1.MsgWithdrawProposalResponse"> & {
};

/**
 * Describes the message cosmos.group.v1.MsgWithdrawProposalResponse.
 * Use `create(MsgWithdrawProposalResponseSchema)` to create a new message.
 */
export const MsgWithdrawProposalResponseSchema: GenMessage<MsgWithdrawProposalResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_group_v1_tx, 21);

/**
 * MsgVote is the Msg/Vote request type.
 *
 * @generated from message cosmos.group.v1.MsgVote
 */
export type MsgVote = Message<"cosmos.group.v1.MsgVote"> & {
  /**
   * proposal is the unique ID of the proposal.
   *
   * @generated from field: uint64 proposal_id = 1;
   */
  proposalId: bigint;

  /**
   * voter is the voter account address.
   *
   * @generated from field: string voter = 2;
   */
  voter: string;

  /**
   * option is the voter's choice on the proposal.
   *
   * @generated from field: cosmos.group.v1.VoteOption option = 3;
   */
  option: VoteOption;

  /**
   * metadata is any arbitrary metadata attached to the vote.
   *
   * @generated from field: string metadata = 4;
   */
  metadata: string;

  /**
   * exec defines whether the proposal should be executed
   * immediately after voting or not.
   *
   * @generated from field: cosmos.group.v1.Exec exec = 5;
   */
  exec: Exec;
};

/**
 * Describes the message cosmos.group.v1.MsgVote.
 * Use `create(MsgVoteSchema)` to create a new message.
 */
export const MsgVoteSchema: GenMessage<MsgVote> = /*@__PURE__*/
  messageDesc(file_cosmos_group_v1_tx, 22);

/**
 * MsgVoteResponse is the Msg/Vote response type.
 *
 * @generated from message cosmos.group.v1.MsgVoteResponse
 */
export type MsgVoteResponse = Message<"cosmos.group.v1.MsgVoteResponse"> & {
};

/**
 * Describes the message cosmos.group.v1.MsgVoteResponse.
 * Use `create(MsgVoteResponseSchema)` to create a new message.
 */
export const MsgVoteResponseSchema: GenMessage<MsgVoteResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_group_v1_tx, 23);

/**
 * MsgExec is the Msg/Exec request type.
 *
 * @generated from message cosmos.group.v1.MsgExec
 */
export type MsgExec = Message<"cosmos.group.v1.MsgExec"> & {
  /**
   * proposal is the unique ID of the proposal.
   *
   * @generated from field: uint64 proposal_id = 1;
   */
  proposalId: bigint;

  /**
   * executor is the account address used to execute the proposal.
   *
   * @generated from field: string executor = 2;
   */
  executor: string;
};

/**
 * Describes the message cosmos.group.v1.MsgExec.
 * Use `create(MsgExecSchema)` to create a new message.
 */
export const MsgExecSchema: GenMessage<MsgExec> = /*@__PURE__*/
  messageDesc(file_cosmos_group_v1_tx, 24);

/**
 * MsgExecResponse is the Msg/Exec request type.
 *
 * @generated from message cosmos.group.v1.MsgExecResponse
 */
export type MsgExecResponse = Message<"cosmos.group.v1.MsgExecResponse"> & {
  /**
   * result is the final result of the proposal execution.
   *
   * @generated from field: cosmos.group.v1.ProposalExecutorResult result = 2;
   */
  result: ProposalExecutorResult;
};

/**
 * Describes the message cosmos.group.v1.MsgExecResponse.
 * Use `create(MsgExecResponseSchema)` to create a new message.
 */
export const MsgExecResponseSchema: GenMessage<MsgExecResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_group_v1_tx, 25);

/**
 * MsgLeaveGroup is the Msg/LeaveGroup request type.
 *
 * @generated from message cosmos.group.v1.MsgLeaveGroup
 */
export type MsgLeaveGroup = Message<"cosmos.group.v1.MsgLeaveGroup"> & {
  /**
   * address is the account address of the group member.
   *
   * @generated from field: string address = 1;
   */
  address: string;

  /**
   * group_id is the unique ID of the group.
   *
   * @generated from field: uint64 group_id = 2;
   */
  groupId: bigint;
};

/**
 * Describes the message cosmos.group.v1.MsgLeaveGroup.
 * Use `create(MsgLeaveGroupSchema)` to create a new message.
 */
export const MsgLeaveGroupSchema: GenMessage<MsgLeaveGroup> = /*@__PURE__*/
  messageDesc(file_cosmos_group_v1_tx, 26);

/**
 * MsgLeaveGroupResponse is the Msg/LeaveGroup response type.
 *
 * @generated from message cosmos.group.v1.MsgLeaveGroupResponse
 */
export type MsgLeaveGroupResponse = Message<"cosmos.group.v1.MsgLeaveGroupResponse"> & {
};

/**
 * Describes the message cosmos.group.v1.MsgLeaveGroupResponse.
 * Use `create(MsgLeaveGroupResponseSchema)` to create a new message.
 */
export const MsgLeaveGroupResponseSchema: GenMessage<MsgLeaveGroupResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_group_v1_tx, 27);

/**
 * Exec defines modes of execution of a proposal on creation or on new vote.
 *
 * @generated from enum cosmos.group.v1.Exec
 */
export enum Exec {
  /**
   * An empty value means that there should be a separate
   * MsgExec request for the proposal to execute.
   *
   * @generated from enum value: EXEC_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Try to execute the proposal immediately.
   * If the proposal is not allowed per the DecisionPolicy,
   * the proposal will still be open and could
   * be executed at a later point.
   *
   * @generated from enum value: EXEC_TRY = 1;
   */
  TRY = 1,
}

/**
 * Describes the enum cosmos.group.v1.Exec.
 */
export const ExecSchema: GenEnum<Exec> = /*@__PURE__*/
  enumDesc(file_cosmos_group_v1_tx, 0);

/**
 * Msg is the cosmos.group.v1 Msg service.
 *
 * @generated from service cosmos.group.v1.Msg
 */
export const Msg: GenService<{
  /**
   * CreateGroup creates a new group with an admin account address, a list of members and some optional metadata.
   *
   * @generated from rpc cosmos.group.v1.Msg.CreateGroup
   */
  createGroup: {
    methodKind: "unary";
    input: typeof MsgCreateGroupSchema;
    output: typeof MsgCreateGroupResponseSchema;
  },
  /**
   * UpdateGroupMembers updates the group members with given group id and admin address.
   *
   * @generated from rpc cosmos.group.v1.Msg.UpdateGroupMembers
   */
  updateGroupMembers: {
    methodKind: "unary";
    input: typeof MsgUpdateGroupMembersSchema;
    output: typeof MsgUpdateGroupMembersResponseSchema;
  },
  /**
   * UpdateGroupAdmin updates the group admin with given group id and previous admin address.
   *
   * @generated from rpc cosmos.group.v1.Msg.UpdateGroupAdmin
   */
  updateGroupAdmin: {
    methodKind: "unary";
    input: typeof MsgUpdateGroupAdminSchema;
    output: typeof MsgUpdateGroupAdminResponseSchema;
  },
  /**
   * UpdateGroupMetadata updates the group metadata with given group id and admin address.
   *
   * @generated from rpc cosmos.group.v1.Msg.UpdateGroupMetadata
   */
  updateGroupMetadata: {
    methodKind: "unary";
    input: typeof MsgUpdateGroupMetadataSchema;
    output: typeof MsgUpdateGroupMetadataResponseSchema;
  },
  /**
   * CreateGroupPolicy creates a new group policy using given DecisionPolicy.
   *
   * @generated from rpc cosmos.group.v1.Msg.CreateGroupPolicy
   */
  createGroupPolicy: {
    methodKind: "unary";
    input: typeof MsgCreateGroupPolicySchema;
    output: typeof MsgCreateGroupPolicyResponseSchema;
  },
  /**
   * CreateGroupWithPolicy creates a new group with policy.
   *
   * @generated from rpc cosmos.group.v1.Msg.CreateGroupWithPolicy
   */
  createGroupWithPolicy: {
    methodKind: "unary";
    input: typeof MsgCreateGroupWithPolicySchema;
    output: typeof MsgCreateGroupWithPolicyResponseSchema;
  },
  /**
   * UpdateGroupPolicyAdmin updates a group policy admin.
   *
   * @generated from rpc cosmos.group.v1.Msg.UpdateGroupPolicyAdmin
   */
  updateGroupPolicyAdmin: {
    methodKind: "unary";
    input: typeof MsgUpdateGroupPolicyAdminSchema;
    output: typeof MsgUpdateGroupPolicyAdminResponseSchema;
  },
  /**
   * UpdateGroupPolicyDecisionPolicy allows a group policy's decision policy to be updated.
   *
   * @generated from rpc cosmos.group.v1.Msg.UpdateGroupPolicyDecisionPolicy
   */
  updateGroupPolicyDecisionPolicy: {
    methodKind: "unary";
    input: typeof MsgUpdateGroupPolicyDecisionPolicySchema;
    output: typeof MsgUpdateGroupPolicyDecisionPolicyResponseSchema;
  },
  /**
   * UpdateGroupPolicyMetadata updates a group policy metadata.
   *
   * @generated from rpc cosmos.group.v1.Msg.UpdateGroupPolicyMetadata
   */
  updateGroupPolicyMetadata: {
    methodKind: "unary";
    input: typeof MsgUpdateGroupPolicyMetadataSchema;
    output: typeof MsgUpdateGroupPolicyMetadataResponseSchema;
  },
  /**
   * SubmitProposal submits a new proposal.
   *
   * @generated from rpc cosmos.group.v1.Msg.SubmitProposal
   */
  submitProposal: {
    methodKind: "unary";
    input: typeof MsgSubmitProposalSchema;
    output: typeof MsgSubmitProposalResponseSchema;
  },
  /**
   * WithdrawProposal withdraws a proposal.
   *
   * @generated from rpc cosmos.group.v1.Msg.WithdrawProposal
   */
  withdrawProposal: {
    methodKind: "unary";
    input: typeof MsgWithdrawProposalSchema;
    output: typeof MsgWithdrawProposalResponseSchema;
  },
  /**
   * Vote allows a voter to vote on a proposal.
   *
   * @generated from rpc cosmos.group.v1.Msg.Vote
   */
  vote: {
    methodKind: "unary";
    input: typeof MsgVoteSchema;
    output: typeof MsgVoteResponseSchema;
  },
  /**
   * Exec executes a proposal.
   *
   * @generated from rpc cosmos.group.v1.Msg.Exec
   */
  exec: {
    methodKind: "unary";
    input: typeof MsgExecSchema;
    output: typeof MsgExecResponseSchema;
  },
  /**
   * LeaveGroup allows a group member to leave the group.
   *
   * @generated from rpc cosmos.group.v1.Msg.LeaveGroup
   */
  leaveGroup: {
    methodKind: "unary";
    input: typeof MsgLeaveGroupSchema;
    output: typeof MsgLeaveGroupResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_cosmos_group_v1_tx, 0);

