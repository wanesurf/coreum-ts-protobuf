// @generated by protoc-gen-es v2.0.0 with parameter "target=ts"
// @generated from file cosmos/staking/v1beta1/genesis.proto (package cosmos.staking.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_gogoproto_gogo } from "../../../gogoproto/gogo_pb";
import type { Delegation, Params, Redelegation, UnbondingDelegation, Validator } from "./staking_pb";
import { file_cosmos_staking_v1beta1_staking } from "./staking_pb";
import { file_cosmos_proto_cosmos } from "../../../cosmos_proto/cosmos_pb";
import { file_amino_amino } from "../../../amino/amino_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file cosmos/staking/v1beta1/genesis.proto.
 */
export const file_cosmos_staking_v1beta1_genesis: GenFile = /*@__PURE__*/
  fileDesc("CiRjb3Ntb3Mvc3Rha2luZy92MWJldGExL2dlbmVzaXMucHJvdG8SFmNvc21vcy5zdGFraW5nLnYxYmV0YTEiogQKDEdlbmVzaXNTdGF0ZRI5CgZwYXJhbXMYASABKAsyHi5jb3Ntb3Muc3Rha2luZy52MWJldGExLlBhcmFtc0IJyN4fAKjnsCoBEkoKEGxhc3RfdG90YWxfcG93ZXIYAiABKAxCMMjeHwDa3h8VY29zbW9zc2RrLmlvL21hdGguSW500rQtCmNvc21vcy5JbnSo57AqARJUChVsYXN0X3ZhbGlkYXRvcl9wb3dlcnMYAyADKAsyKi5jb3Ntb3Muc3Rha2luZy52MWJldGExLkxhc3RWYWxpZGF0b3JQb3dlckIJyN4fAKjnsCoBEkAKCnZhbGlkYXRvcnMYBCADKAsyIS5jb3Ntb3Muc3Rha2luZy52MWJldGExLlZhbGlkYXRvckIJyN4fAKjnsCoBEkIKC2RlbGVnYXRpb25zGAUgAygLMiIuY29zbW9zLnN0YWtpbmcudjFiZXRhMS5EZWxlZ2F0aW9uQgnI3h8AqOewKgESVQoVdW5ib25kaW5nX2RlbGVnYXRpb25zGAYgAygLMisuY29zbW9zLnN0YWtpbmcudjFiZXRhMS5VbmJvbmRpbmdEZWxlZ2F0aW9uQgnI3h8AqOewKgESRgoNcmVkZWxlZ2F0aW9ucxgHIAMoCzIkLmNvc21vcy5zdGFraW5nLnYxYmV0YTEuUmVkZWxlZ2F0aW9uQgnI3h8AqOewKgESEAoIZXhwb3J0ZWQYCCABKAgiWAoSTGFzdFZhbGlkYXRvclBvd2VyEikKB2FkZHJlc3MYASABKAlCGNK0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZxINCgVwb3dlchgCIAEoAzoIiKAfAOigHwBCLlosZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay94L3N0YWtpbmcvdHlwZXNiBnByb3RvMw", [file_gogoproto_gogo, file_cosmos_staking_v1beta1_staking, file_cosmos_proto_cosmos, file_amino_amino]);

/**
 * GenesisState defines the staking module's genesis state.
 *
 * @generated from message cosmos.staking.v1beta1.GenesisState
 */
export type GenesisState = Message<"cosmos.staking.v1beta1.GenesisState"> & {
  /**
   * params defines all the parameters of related to deposit.
   *
   * @generated from field: cosmos.staking.v1beta1.Params params = 1;
   */
  params?: Params;

  /**
   * last_total_power tracks the total amounts of bonded tokens recorded during
   * the previous end block.
   *
   * @generated from field: bytes last_total_power = 2;
   */
  lastTotalPower: Uint8Array;

  /**
   * last_validator_powers is a special index that provides a historical list
   * of the last-block's bonded validators.
   *
   * @generated from field: repeated cosmos.staking.v1beta1.LastValidatorPower last_validator_powers = 3;
   */
  lastValidatorPowers: LastValidatorPower[];

  /**
   * validators defines the validator set at genesis.
   *
   * @generated from field: repeated cosmos.staking.v1beta1.Validator validators = 4;
   */
  validators: Validator[];

  /**
   * delegations defines the delegations active at genesis.
   *
   * @generated from field: repeated cosmos.staking.v1beta1.Delegation delegations = 5;
   */
  delegations: Delegation[];

  /**
   * unbonding_delegations defines the unbonding delegations active at genesis.
   *
   * @generated from field: repeated cosmos.staking.v1beta1.UnbondingDelegation unbonding_delegations = 6;
   */
  unbondingDelegations: UnbondingDelegation[];

  /**
   * redelegations defines the redelegations active at genesis.
   *
   * @generated from field: repeated cosmos.staking.v1beta1.Redelegation redelegations = 7;
   */
  redelegations: Redelegation[];

  /**
   * exported defines a bool to identify whether the chain dealing with exported or initialized genesis.
   *
   * @generated from field: bool exported = 8;
   */
  exported: boolean;
};

/**
 * Describes the message cosmos.staking.v1beta1.GenesisState.
 * Use `create(GenesisStateSchema)` to create a new message.
 */
export const GenesisStateSchema: GenMessage<GenesisState> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_genesis, 0);

/**
 * LastValidatorPower required for validator set update logic.
 *
 * @generated from message cosmos.staking.v1beta1.LastValidatorPower
 */
export type LastValidatorPower = Message<"cosmos.staking.v1beta1.LastValidatorPower"> & {
  /**
   * address is the address of the validator.
   *
   * @generated from field: string address = 1;
   */
  address: string;

  /**
   * power defines the power of the validator.
   *
   * @generated from field: int64 power = 2;
   */
  power: bigint;
};

/**
 * Describes the message cosmos.staking.v1beta1.LastValidatorPower.
 * Use `create(LastValidatorPowerSchema)` to create a new message.
 */
export const LastValidatorPowerSchema: GenMessage<LastValidatorPower> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_genesis, 1);

