// @generated by protoc-gen-es v2.0.0 with parameter "target=ts"
// @generated from file cosmos/staking/v1beta1/query.proto (package cosmos.staking.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { PageRequest, PageResponse } from "../../base/query/v1beta1/pagination_pb";
import { file_cosmos_base_query_v1beta1_pagination } from "../../base/query/v1beta1/pagination_pb";
import { file_gogoproto_gogo } from "../../../gogoproto/gogo_pb";
import { file_google_api_annotations } from "../../../google/api/annotations_pb";
import type { DelegationResponse, HistoricalInfo, Params, Pool, RedelegationResponse, UnbondingDelegation, Validator } from "./staking_pb";
import { file_cosmos_staking_v1beta1_staking } from "./staking_pb";
import { file_cosmos_proto_cosmos } from "../../../cosmos_proto/cosmos_pb";
import { file_cosmos_query_v1_query } from "../../query/v1/query_pb";
import { file_amino_amino } from "../../../amino/amino_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file cosmos/staking/v1beta1/query.proto.
 */
export const file_cosmos_staking_v1beta1_query: GenFile = /*@__PURE__*/
  fileDesc("", [file_cosmos_base_query_v1beta1_pagination, file_gogoproto_gogo, file_google_api_annotations, file_cosmos_staking_v1beta1_staking, file_cosmos_proto_cosmos, file_cosmos_query_v1_query, file_amino_amino]);

/**
 * QueryValidatorsRequest is request type for Query/Validators RPC method.
 *
 * @generated from message cosmos.staking.v1beta1.QueryValidatorsRequest
 */
export type QueryValidatorsRequest = Message<"cosmos.staking.v1beta1.QueryValidatorsRequest"> & {
  /**
   * status enables to query for validators matching a given status.
   *
   * @generated from field: string status = 1;
   */
  status: string;

  /**
   * pagination defines an optional pagination for the request.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
   */
  pagination?: PageRequest;
};

/**
 * Describes the message cosmos.staking.v1beta1.QueryValidatorsRequest.
 * Use `create(QueryValidatorsRequestSchema)` to create a new message.
 */
export const QueryValidatorsRequestSchema: GenMessage<QueryValidatorsRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_query, 0);

/**
 * QueryValidatorsResponse is response type for the Query/Validators RPC method
 *
 * @generated from message cosmos.staking.v1beta1.QueryValidatorsResponse
 */
export type QueryValidatorsResponse = Message<"cosmos.staking.v1beta1.QueryValidatorsResponse"> & {
  /**
   * validators contains all the queried validators.
   *
   * @generated from field: repeated cosmos.staking.v1beta1.Validator validators = 1;
   */
  validators: Validator[];

  /**
   * pagination defines the pagination in the response.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;
};

/**
 * Describes the message cosmos.staking.v1beta1.QueryValidatorsResponse.
 * Use `create(QueryValidatorsResponseSchema)` to create a new message.
 */
export const QueryValidatorsResponseSchema: GenMessage<QueryValidatorsResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_query, 1);

/**
 * QueryValidatorRequest is response type for the Query/Validator RPC method
 *
 * @generated from message cosmos.staking.v1beta1.QueryValidatorRequest
 */
export type QueryValidatorRequest = Message<"cosmos.staking.v1beta1.QueryValidatorRequest"> & {
  /**
   * validator_addr defines the validator address to query for.
   *
   * @generated from field: string validator_addr = 1;
   */
  validatorAddr: string;
};

/**
 * Describes the message cosmos.staking.v1beta1.QueryValidatorRequest.
 * Use `create(QueryValidatorRequestSchema)` to create a new message.
 */
export const QueryValidatorRequestSchema: GenMessage<QueryValidatorRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_query, 2);

/**
 * QueryValidatorResponse is response type for the Query/Validator RPC method
 *
 * @generated from message cosmos.staking.v1beta1.QueryValidatorResponse
 */
export type QueryValidatorResponse = Message<"cosmos.staking.v1beta1.QueryValidatorResponse"> & {
  /**
   * validator defines the validator info.
   *
   * @generated from field: cosmos.staking.v1beta1.Validator validator = 1;
   */
  validator?: Validator;
};

/**
 * Describes the message cosmos.staking.v1beta1.QueryValidatorResponse.
 * Use `create(QueryValidatorResponseSchema)` to create a new message.
 */
export const QueryValidatorResponseSchema: GenMessage<QueryValidatorResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_query, 3);

/**
 * QueryValidatorDelegationsRequest is request type for the
 * Query/ValidatorDelegations RPC method
 *
 * @generated from message cosmos.staking.v1beta1.QueryValidatorDelegationsRequest
 */
export type QueryValidatorDelegationsRequest = Message<"cosmos.staking.v1beta1.QueryValidatorDelegationsRequest"> & {
  /**
   * validator_addr defines the validator address to query for.
   *
   * @generated from field: string validator_addr = 1;
   */
  validatorAddr: string;

  /**
   * pagination defines an optional pagination for the request.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
   */
  pagination?: PageRequest;
};

/**
 * Describes the message cosmos.staking.v1beta1.QueryValidatorDelegationsRequest.
 * Use `create(QueryValidatorDelegationsRequestSchema)` to create a new message.
 */
export const QueryValidatorDelegationsRequestSchema: GenMessage<QueryValidatorDelegationsRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_query, 4);

/**
 * QueryValidatorDelegationsResponse is response type for the
 * Query/ValidatorDelegations RPC method
 *
 * @generated from message cosmos.staking.v1beta1.QueryValidatorDelegationsResponse
 */
export type QueryValidatorDelegationsResponse = Message<"cosmos.staking.v1beta1.QueryValidatorDelegationsResponse"> & {
  /**
   * @generated from field: repeated cosmos.staking.v1beta1.DelegationResponse delegation_responses = 1;
   */
  delegationResponses: DelegationResponse[];

  /**
   * pagination defines the pagination in the response.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;
};

/**
 * Describes the message cosmos.staking.v1beta1.QueryValidatorDelegationsResponse.
 * Use `create(QueryValidatorDelegationsResponseSchema)` to create a new message.
 */
export const QueryValidatorDelegationsResponseSchema: GenMessage<QueryValidatorDelegationsResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_query, 5);

/**
 * QueryValidatorUnbondingDelegationsRequest is required type for the
 * Query/ValidatorUnbondingDelegations RPC method
 *
 * @generated from message cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsRequest
 */
export type QueryValidatorUnbondingDelegationsRequest = Message<"cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsRequest"> & {
  /**
   * validator_addr defines the validator address to query for.
   *
   * @generated from field: string validator_addr = 1;
   */
  validatorAddr: string;

  /**
   * pagination defines an optional pagination for the request.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
   */
  pagination?: PageRequest;
};

/**
 * Describes the message cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsRequest.
 * Use `create(QueryValidatorUnbondingDelegationsRequestSchema)` to create a new message.
 */
export const QueryValidatorUnbondingDelegationsRequestSchema: GenMessage<QueryValidatorUnbondingDelegationsRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_query, 6);

/**
 * QueryValidatorUnbondingDelegationsResponse is response type for the
 * Query/ValidatorUnbondingDelegations RPC method.
 *
 * @generated from message cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse
 */
export type QueryValidatorUnbondingDelegationsResponse = Message<"cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse"> & {
  /**
   * @generated from field: repeated cosmos.staking.v1beta1.UnbondingDelegation unbonding_responses = 1;
   */
  unbondingResponses: UnbondingDelegation[];

  /**
   * pagination defines the pagination in the response.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;
};

/**
 * Describes the message cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse.
 * Use `create(QueryValidatorUnbondingDelegationsResponseSchema)` to create a new message.
 */
export const QueryValidatorUnbondingDelegationsResponseSchema: GenMessage<QueryValidatorUnbondingDelegationsResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_query, 7);

/**
 * QueryDelegationRequest is request type for the Query/Delegation RPC method.
 *
 * @generated from message cosmos.staking.v1beta1.QueryDelegationRequest
 */
export type QueryDelegationRequest = Message<"cosmos.staking.v1beta1.QueryDelegationRequest"> & {
  /**
   * delegator_addr defines the delegator address to query for.
   *
   * @generated from field: string delegator_addr = 1;
   */
  delegatorAddr: string;

  /**
   * validator_addr defines the validator address to query for.
   *
   * @generated from field: string validator_addr = 2;
   */
  validatorAddr: string;
};

/**
 * Describes the message cosmos.staking.v1beta1.QueryDelegationRequest.
 * Use `create(QueryDelegationRequestSchema)` to create a new message.
 */
export const QueryDelegationRequestSchema: GenMessage<QueryDelegationRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_query, 8);

/**
 * QueryDelegationResponse is response type for the Query/Delegation RPC method.
 *
 * @generated from message cosmos.staking.v1beta1.QueryDelegationResponse
 */
export type QueryDelegationResponse = Message<"cosmos.staking.v1beta1.QueryDelegationResponse"> & {
  /**
   * delegation_responses defines the delegation info of a delegation.
   *
   * @generated from field: cosmos.staking.v1beta1.DelegationResponse delegation_response = 1;
   */
  delegationResponse?: DelegationResponse;
};

/**
 * Describes the message cosmos.staking.v1beta1.QueryDelegationResponse.
 * Use `create(QueryDelegationResponseSchema)` to create a new message.
 */
export const QueryDelegationResponseSchema: GenMessage<QueryDelegationResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_query, 9);

/**
 * QueryUnbondingDelegationRequest is request type for the
 * Query/UnbondingDelegation RPC method.
 *
 * @generated from message cosmos.staking.v1beta1.QueryUnbondingDelegationRequest
 */
export type QueryUnbondingDelegationRequest = Message<"cosmos.staking.v1beta1.QueryUnbondingDelegationRequest"> & {
  /**
   * delegator_addr defines the delegator address to query for.
   *
   * @generated from field: string delegator_addr = 1;
   */
  delegatorAddr: string;

  /**
   * validator_addr defines the validator address to query for.
   *
   * @generated from field: string validator_addr = 2;
   */
  validatorAddr: string;
};

/**
 * Describes the message cosmos.staking.v1beta1.QueryUnbondingDelegationRequest.
 * Use `create(QueryUnbondingDelegationRequestSchema)` to create a new message.
 */
export const QueryUnbondingDelegationRequestSchema: GenMessage<QueryUnbondingDelegationRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_query, 10);

/**
 * QueryDelegationResponse is response type for the Query/UnbondingDelegation
 * RPC method.
 *
 * @generated from message cosmos.staking.v1beta1.QueryUnbondingDelegationResponse
 */
export type QueryUnbondingDelegationResponse = Message<"cosmos.staking.v1beta1.QueryUnbondingDelegationResponse"> & {
  /**
   * unbond defines the unbonding information of a delegation.
   *
   * @generated from field: cosmos.staking.v1beta1.UnbondingDelegation unbond = 1;
   */
  unbond?: UnbondingDelegation;
};

/**
 * Describes the message cosmos.staking.v1beta1.QueryUnbondingDelegationResponse.
 * Use `create(QueryUnbondingDelegationResponseSchema)` to create a new message.
 */
export const QueryUnbondingDelegationResponseSchema: GenMessage<QueryUnbondingDelegationResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_query, 11);

/**
 * QueryDelegatorDelegationsRequest is request type for the
 * Query/DelegatorDelegations RPC method.
 *
 * @generated from message cosmos.staking.v1beta1.QueryDelegatorDelegationsRequest
 */
export type QueryDelegatorDelegationsRequest = Message<"cosmos.staking.v1beta1.QueryDelegatorDelegationsRequest"> & {
  /**
   * delegator_addr defines the delegator address to query for.
   *
   * @generated from field: string delegator_addr = 1;
   */
  delegatorAddr: string;

  /**
   * pagination defines an optional pagination for the request.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
   */
  pagination?: PageRequest;
};

/**
 * Describes the message cosmos.staking.v1beta1.QueryDelegatorDelegationsRequest.
 * Use `create(QueryDelegatorDelegationsRequestSchema)` to create a new message.
 */
export const QueryDelegatorDelegationsRequestSchema: GenMessage<QueryDelegatorDelegationsRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_query, 12);

/**
 * QueryDelegatorDelegationsResponse is response type for the
 * Query/DelegatorDelegations RPC method.
 *
 * @generated from message cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse
 */
export type QueryDelegatorDelegationsResponse = Message<"cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse"> & {
  /**
   * delegation_responses defines all the delegations' info of a delegator.
   *
   * @generated from field: repeated cosmos.staking.v1beta1.DelegationResponse delegation_responses = 1;
   */
  delegationResponses: DelegationResponse[];

  /**
   * pagination defines the pagination in the response.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;
};

/**
 * Describes the message cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse.
 * Use `create(QueryDelegatorDelegationsResponseSchema)` to create a new message.
 */
export const QueryDelegatorDelegationsResponseSchema: GenMessage<QueryDelegatorDelegationsResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_query, 13);

/**
 * QueryDelegatorUnbondingDelegationsRequest is request type for the
 * Query/DelegatorUnbondingDelegations RPC method.
 *
 * @generated from message cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsRequest
 */
export type QueryDelegatorUnbondingDelegationsRequest = Message<"cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsRequest"> & {
  /**
   * delegator_addr defines the delegator address to query for.
   *
   * @generated from field: string delegator_addr = 1;
   */
  delegatorAddr: string;

  /**
   * pagination defines an optional pagination for the request.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
   */
  pagination?: PageRequest;
};

/**
 * Describes the message cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsRequest.
 * Use `create(QueryDelegatorUnbondingDelegationsRequestSchema)` to create a new message.
 */
export const QueryDelegatorUnbondingDelegationsRequestSchema: GenMessage<QueryDelegatorUnbondingDelegationsRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_query, 14);

/**
 * QueryUnbondingDelegatorDelegationsResponse is response type for the
 * Query/UnbondingDelegatorDelegations RPC method.
 *
 * @generated from message cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse
 */
export type QueryDelegatorUnbondingDelegationsResponse = Message<"cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse"> & {
  /**
   * @generated from field: repeated cosmos.staking.v1beta1.UnbondingDelegation unbonding_responses = 1;
   */
  unbondingResponses: UnbondingDelegation[];

  /**
   * pagination defines the pagination in the response.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;
};

/**
 * Describes the message cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse.
 * Use `create(QueryDelegatorUnbondingDelegationsResponseSchema)` to create a new message.
 */
export const QueryDelegatorUnbondingDelegationsResponseSchema: GenMessage<QueryDelegatorUnbondingDelegationsResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_query, 15);

/**
 * QueryRedelegationsRequest is request type for the Query/Redelegations RPC
 * method.
 *
 * @generated from message cosmos.staking.v1beta1.QueryRedelegationsRequest
 */
export type QueryRedelegationsRequest = Message<"cosmos.staking.v1beta1.QueryRedelegationsRequest"> & {
  /**
   * delegator_addr defines the delegator address to query for.
   *
   * @generated from field: string delegator_addr = 1;
   */
  delegatorAddr: string;

  /**
   * src_validator_addr defines the validator address to redelegate from.
   *
   * @generated from field: string src_validator_addr = 2;
   */
  srcValidatorAddr: string;

  /**
   * dst_validator_addr defines the validator address to redelegate to.
   *
   * @generated from field: string dst_validator_addr = 3;
   */
  dstValidatorAddr: string;

  /**
   * pagination defines an optional pagination for the request.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 4;
   */
  pagination?: PageRequest;
};

/**
 * Describes the message cosmos.staking.v1beta1.QueryRedelegationsRequest.
 * Use `create(QueryRedelegationsRequestSchema)` to create a new message.
 */
export const QueryRedelegationsRequestSchema: GenMessage<QueryRedelegationsRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_query, 16);

/**
 * QueryRedelegationsResponse is response type for the Query/Redelegations RPC
 * method.
 *
 * @generated from message cosmos.staking.v1beta1.QueryRedelegationsResponse
 */
export type QueryRedelegationsResponse = Message<"cosmos.staking.v1beta1.QueryRedelegationsResponse"> & {
  /**
   * @generated from field: repeated cosmos.staking.v1beta1.RedelegationResponse redelegation_responses = 1;
   */
  redelegationResponses: RedelegationResponse[];

  /**
   * pagination defines the pagination in the response.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;
};

/**
 * Describes the message cosmos.staking.v1beta1.QueryRedelegationsResponse.
 * Use `create(QueryRedelegationsResponseSchema)` to create a new message.
 */
export const QueryRedelegationsResponseSchema: GenMessage<QueryRedelegationsResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_query, 17);

/**
 * QueryDelegatorValidatorsRequest is request type for the
 * Query/DelegatorValidators RPC method.
 *
 * @generated from message cosmos.staking.v1beta1.QueryDelegatorValidatorsRequest
 */
export type QueryDelegatorValidatorsRequest = Message<"cosmos.staking.v1beta1.QueryDelegatorValidatorsRequest"> & {
  /**
   * delegator_addr defines the delegator address to query for.
   *
   * @generated from field: string delegator_addr = 1;
   */
  delegatorAddr: string;

  /**
   * pagination defines an optional pagination for the request.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
   */
  pagination?: PageRequest;
};

/**
 * Describes the message cosmos.staking.v1beta1.QueryDelegatorValidatorsRequest.
 * Use `create(QueryDelegatorValidatorsRequestSchema)` to create a new message.
 */
export const QueryDelegatorValidatorsRequestSchema: GenMessage<QueryDelegatorValidatorsRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_query, 18);

/**
 * QueryDelegatorValidatorsResponse is response type for the
 * Query/DelegatorValidators RPC method.
 *
 * @generated from message cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse
 */
export type QueryDelegatorValidatorsResponse = Message<"cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse"> & {
  /**
   * validators defines the validators' info of a delegator.
   *
   * @generated from field: repeated cosmos.staking.v1beta1.Validator validators = 1;
   */
  validators: Validator[];

  /**
   * pagination defines the pagination in the response.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;
};

/**
 * Describes the message cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse.
 * Use `create(QueryDelegatorValidatorsResponseSchema)` to create a new message.
 */
export const QueryDelegatorValidatorsResponseSchema: GenMessage<QueryDelegatorValidatorsResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_query, 19);

/**
 * QueryDelegatorValidatorRequest is request type for the
 * Query/DelegatorValidator RPC method.
 *
 * @generated from message cosmos.staking.v1beta1.QueryDelegatorValidatorRequest
 */
export type QueryDelegatorValidatorRequest = Message<"cosmos.staking.v1beta1.QueryDelegatorValidatorRequest"> & {
  /**
   * delegator_addr defines the delegator address to query for.
   *
   * @generated from field: string delegator_addr = 1;
   */
  delegatorAddr: string;

  /**
   * validator_addr defines the validator address to query for.
   *
   * @generated from field: string validator_addr = 2;
   */
  validatorAddr: string;
};

/**
 * Describes the message cosmos.staking.v1beta1.QueryDelegatorValidatorRequest.
 * Use `create(QueryDelegatorValidatorRequestSchema)` to create a new message.
 */
export const QueryDelegatorValidatorRequestSchema: GenMessage<QueryDelegatorValidatorRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_query, 20);

/**
 * QueryDelegatorValidatorResponse response type for the
 * Query/DelegatorValidator RPC method.
 *
 * @generated from message cosmos.staking.v1beta1.QueryDelegatorValidatorResponse
 */
export type QueryDelegatorValidatorResponse = Message<"cosmos.staking.v1beta1.QueryDelegatorValidatorResponse"> & {
  /**
   * validator defines the validator info.
   *
   * @generated from field: cosmos.staking.v1beta1.Validator validator = 1;
   */
  validator?: Validator;
};

/**
 * Describes the message cosmos.staking.v1beta1.QueryDelegatorValidatorResponse.
 * Use `create(QueryDelegatorValidatorResponseSchema)` to create a new message.
 */
export const QueryDelegatorValidatorResponseSchema: GenMessage<QueryDelegatorValidatorResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_query, 21);

/**
 * QueryHistoricalInfoRequest is request type for the Query/HistoricalInfo RPC
 * method.
 *
 * @generated from message cosmos.staking.v1beta1.QueryHistoricalInfoRequest
 */
export type QueryHistoricalInfoRequest = Message<"cosmos.staking.v1beta1.QueryHistoricalInfoRequest"> & {
  /**
   * height defines at which height to query the historical info.
   *
   * @generated from field: int64 height = 1;
   */
  height: bigint;
};

/**
 * Describes the message cosmos.staking.v1beta1.QueryHistoricalInfoRequest.
 * Use `create(QueryHistoricalInfoRequestSchema)` to create a new message.
 */
export const QueryHistoricalInfoRequestSchema: GenMessage<QueryHistoricalInfoRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_query, 22);

/**
 * QueryHistoricalInfoResponse is response type for the Query/HistoricalInfo RPC
 * method.
 *
 * @generated from message cosmos.staking.v1beta1.QueryHistoricalInfoResponse
 */
export type QueryHistoricalInfoResponse = Message<"cosmos.staking.v1beta1.QueryHistoricalInfoResponse"> & {
  /**
   * hist defines the historical info at the given height.
   *
   * @generated from field: cosmos.staking.v1beta1.HistoricalInfo hist = 1;
   */
  hist?: HistoricalInfo;
};

/**
 * Describes the message cosmos.staking.v1beta1.QueryHistoricalInfoResponse.
 * Use `create(QueryHistoricalInfoResponseSchema)` to create a new message.
 */
export const QueryHistoricalInfoResponseSchema: GenMessage<QueryHistoricalInfoResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_query, 23);

/**
 * QueryPoolRequest is request type for the Query/Pool RPC method.
 *
 * @generated from message cosmos.staking.v1beta1.QueryPoolRequest
 */
export type QueryPoolRequest = Message<"cosmos.staking.v1beta1.QueryPoolRequest"> & {
};

/**
 * Describes the message cosmos.staking.v1beta1.QueryPoolRequest.
 * Use `create(QueryPoolRequestSchema)` to create a new message.
 */
export const QueryPoolRequestSchema: GenMessage<QueryPoolRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_query, 24);

/**
 * QueryPoolResponse is response type for the Query/Pool RPC method.
 *
 * @generated from message cosmos.staking.v1beta1.QueryPoolResponse
 */
export type QueryPoolResponse = Message<"cosmos.staking.v1beta1.QueryPoolResponse"> & {
  /**
   * pool defines the pool info.
   *
   * @generated from field: cosmos.staking.v1beta1.Pool pool = 1;
   */
  pool?: Pool;
};

/**
 * Describes the message cosmos.staking.v1beta1.QueryPoolResponse.
 * Use `create(QueryPoolResponseSchema)` to create a new message.
 */
export const QueryPoolResponseSchema: GenMessage<QueryPoolResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_query, 25);

/**
 * QueryParamsRequest is request type for the Query/Params RPC method.
 *
 * @generated from message cosmos.staking.v1beta1.QueryParamsRequest
 */
export type QueryParamsRequest = Message<"cosmos.staking.v1beta1.QueryParamsRequest"> & {
};

/**
 * Describes the message cosmos.staking.v1beta1.QueryParamsRequest.
 * Use `create(QueryParamsRequestSchema)` to create a new message.
 */
export const QueryParamsRequestSchema: GenMessage<QueryParamsRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_query, 26);

/**
 * QueryParamsResponse is response type for the Query/Params RPC method.
 *
 * @generated from message cosmos.staking.v1beta1.QueryParamsResponse
 */
export type QueryParamsResponse = Message<"cosmos.staking.v1beta1.QueryParamsResponse"> & {
  /**
   * params holds all the parameters of this module.
   *
   * @generated from field: cosmos.staking.v1beta1.Params params = 1;
   */
  params?: Params;
};

/**
 * Describes the message cosmos.staking.v1beta1.QueryParamsResponse.
 * Use `create(QueryParamsResponseSchema)` to create a new message.
 */
export const QueryParamsResponseSchema: GenMessage<QueryParamsResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_staking_v1beta1_query, 27);

/**
 * Query defines the gRPC querier service.
 *
 * @generated from service cosmos.staking.v1beta1.Query
 */
export const Query: GenService<{
  /**
   * Validators queries all validators that match the given status.
   *
   * When called from another module, this query might consume a high amount of
   * gas if the pagination field is incorrectly set.
   *
   * @generated from rpc cosmos.staking.v1beta1.Query.Validators
   */
  validators: {
    methodKind: "unary";
    input: typeof QueryValidatorsRequestSchema;
    output: typeof QueryValidatorsResponseSchema;
  },
  /**
   * Validator queries validator info for given validator address.
   *
   * @generated from rpc cosmos.staking.v1beta1.Query.Validator
   */
  validator: {
    methodKind: "unary";
    input: typeof QueryValidatorRequestSchema;
    output: typeof QueryValidatorResponseSchema;
  },
  /**
   * ValidatorDelegations queries delegate info for given validator.
   *
   * When called from another module, this query might consume a high amount of
   * gas if the pagination field is incorrectly set.
   *
   * @generated from rpc cosmos.staking.v1beta1.Query.ValidatorDelegations
   */
  validatorDelegations: {
    methodKind: "unary";
    input: typeof QueryValidatorDelegationsRequestSchema;
    output: typeof QueryValidatorDelegationsResponseSchema;
  },
  /**
   * ValidatorUnbondingDelegations queries unbonding delegations of a validator.
   *
   * When called from another module, this query might consume a high amount of
   * gas if the pagination field is incorrectly set.
   *
   * @generated from rpc cosmos.staking.v1beta1.Query.ValidatorUnbondingDelegations
   */
  validatorUnbondingDelegations: {
    methodKind: "unary";
    input: typeof QueryValidatorUnbondingDelegationsRequestSchema;
    output: typeof QueryValidatorUnbondingDelegationsResponseSchema;
  },
  /**
   * Delegation queries delegate info for given validator delegator pair.
   *
   * @generated from rpc cosmos.staking.v1beta1.Query.Delegation
   */
  delegation: {
    methodKind: "unary";
    input: typeof QueryDelegationRequestSchema;
    output: typeof QueryDelegationResponseSchema;
  },
  /**
   * UnbondingDelegation queries unbonding info for given validator delegator
   * pair.
   *
   * @generated from rpc cosmos.staking.v1beta1.Query.UnbondingDelegation
   */
  unbondingDelegation: {
    methodKind: "unary";
    input: typeof QueryUnbondingDelegationRequestSchema;
    output: typeof QueryUnbondingDelegationResponseSchema;
  },
  /**
   * DelegatorDelegations queries all delegations of a given delegator address.
   *
   * When called from another module, this query might consume a high amount of
   * gas if the pagination field is incorrectly set.
   *
   * @generated from rpc cosmos.staking.v1beta1.Query.DelegatorDelegations
   */
  delegatorDelegations: {
    methodKind: "unary";
    input: typeof QueryDelegatorDelegationsRequestSchema;
    output: typeof QueryDelegatorDelegationsResponseSchema;
  },
  /**
   * DelegatorUnbondingDelegations queries all unbonding delegations of a given
   * delegator address.
   *
   * When called from another module, this query might consume a high amount of
   * gas if the pagination field is incorrectly set.
   *
   * @generated from rpc cosmos.staking.v1beta1.Query.DelegatorUnbondingDelegations
   */
  delegatorUnbondingDelegations: {
    methodKind: "unary";
    input: typeof QueryDelegatorUnbondingDelegationsRequestSchema;
    output: typeof QueryDelegatorUnbondingDelegationsResponseSchema;
  },
  /**
   * Redelegations queries redelegations of given address.
   *
   * When called from another module, this query might consume a high amount of
   * gas if the pagination field is incorrectly set.
   *
   * @generated from rpc cosmos.staking.v1beta1.Query.Redelegations
   */
  redelegations: {
    methodKind: "unary";
    input: typeof QueryRedelegationsRequestSchema;
    output: typeof QueryRedelegationsResponseSchema;
  },
  /**
   * DelegatorValidators queries all validators info for given delegator
   * address.
   *
   * When called from another module, this query might consume a high amount of
   * gas if the pagination field is incorrectly set.
   *
   * @generated from rpc cosmos.staking.v1beta1.Query.DelegatorValidators
   */
  delegatorValidators: {
    methodKind: "unary";
    input: typeof QueryDelegatorValidatorsRequestSchema;
    output: typeof QueryDelegatorValidatorsResponseSchema;
  },
  /**
   * DelegatorValidator queries validator info for given delegator validator
   * pair.
   *
   * @generated from rpc cosmos.staking.v1beta1.Query.DelegatorValidator
   */
  delegatorValidator: {
    methodKind: "unary";
    input: typeof QueryDelegatorValidatorRequestSchema;
    output: typeof QueryDelegatorValidatorResponseSchema;
  },
  /**
   * HistoricalInfo queries the historical info for given height.
   *
   * @generated from rpc cosmos.staking.v1beta1.Query.HistoricalInfo
   */
  historicalInfo: {
    methodKind: "unary";
    input: typeof QueryHistoricalInfoRequestSchema;
    output: typeof QueryHistoricalInfoResponseSchema;
  },
  /**
   * Pool queries the pool info.
   *
   * @generated from rpc cosmos.staking.v1beta1.Query.Pool
   */
  pool: {
    methodKind: "unary";
    input: typeof QueryPoolRequestSchema;
    output: typeof QueryPoolResponseSchema;
  },
  /**
   * Parameters queries the staking parameters.
   *
   * @generated from rpc cosmos.staking.v1beta1.Query.Params
   */
  params: {
    methodKind: "unary";
    input: typeof QueryParamsRequestSchema;
    output: typeof QueryParamsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_cosmos_staking_v1beta1_query, 0);

