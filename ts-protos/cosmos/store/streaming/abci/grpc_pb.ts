// @generated by protoc-gen-es v2.0.0 with parameter "target=ts"
// @generated from file cosmos/store/streaming/abci/grpc.proto (package cosmos.store.streaming.abci, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { RequestFinalizeBlock, ResponseCommit, ResponseFinalizeBlock } from "../../../../tendermint/abci/types_pb";
import { file_tendermint_abci_types } from "../../../../tendermint/abci/types_pb";
import type { StoreKVPair } from "../../v1beta1/listening_pb";
import { file_cosmos_store_v1beta1_listening } from "../../v1beta1/listening_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file cosmos/store/streaming/abci/grpc.proto.
 */
export const file_cosmos_store_streaming_abci_grpc: GenFile = /*@__PURE__*/
  fileDesc("CiZjb3Ntb3Mvc3RvcmUvc3RyZWFtaW5nL2FiY2kvZ3JwYy5wcm90bxIbY29zbW9zLnN0b3JlLnN0cmVhbWluZy5hYmNpIoUBChpMaXN0ZW5GaW5hbGl6ZUJsb2NrUmVxdWVzdBIyCgNyZXEYASABKAsyJS50ZW5kZXJtaW50LmFiY2kuUmVxdWVzdEZpbmFsaXplQmxvY2sSMwoDcmVzGAIgASgLMiYudGVuZGVybWludC5hYmNpLlJlc3BvbnNlRmluYWxpemVCbG9jayIdChtMaXN0ZW5GaW5hbGl6ZUJsb2NrUmVzcG9uc2UikAEKE0xpc3RlbkNvbW1pdFJlcXVlc3QSFAoMYmxvY2tfaGVpZ2h0GAEgASgDEiwKA3JlcxgCIAEoCzIfLnRlbmRlcm1pbnQuYWJjaS5SZXNwb25zZUNvbW1pdBI1CgpjaGFuZ2Vfc2V0GAMgAygLMiEuY29zbW9zLnN0b3JlLnYxYmV0YTEuU3RvcmVLVlBhaXIiFgoUTGlzdGVuQ29tbWl0UmVzcG9uc2UylQIKE0FCQ0lMaXN0ZW5lclNlcnZpY2USiAEKE0xpc3RlbkZpbmFsaXplQmxvY2sSNy5jb3Ntb3Muc3RvcmUuc3RyZWFtaW5nLmFiY2kuTGlzdGVuRmluYWxpemVCbG9ja1JlcXVlc3QaOC5jb3Ntb3Muc3RvcmUuc3RyZWFtaW5nLmFiY2kuTGlzdGVuRmluYWxpemVCbG9ja1Jlc3BvbnNlEnMKDExpc3RlbkNvbW1pdBIwLmNvc21vcy5zdG9yZS5zdHJlYW1pbmcuYWJjaS5MaXN0ZW5Db21taXRSZXF1ZXN0GjEuY29zbW9zLnN0b3JlLnN0cmVhbWluZy5hYmNpLkxpc3RlbkNvbW1pdFJlc3BvbnNlQiNaIWNvc21vc3Nkay5pby9zdG9yZS9zdHJlYW1pbmcvYWJjaWIGcHJvdG8z", [file_tendermint_abci_types, file_cosmos_store_v1beta1_listening]);

/**
 * ListenEndBlockRequest is the request type for the ListenEndBlock RPC method
 *
 * @generated from message cosmos.store.streaming.abci.ListenFinalizeBlockRequest
 */
export type ListenFinalizeBlockRequest = Message<"cosmos.store.streaming.abci.ListenFinalizeBlockRequest"> & {
  /**
   * @generated from field: tendermint.abci.RequestFinalizeBlock req = 1;
   */
  req?: RequestFinalizeBlock;

  /**
   * @generated from field: tendermint.abci.ResponseFinalizeBlock res = 2;
   */
  res?: ResponseFinalizeBlock;
};

/**
 * Describes the message cosmos.store.streaming.abci.ListenFinalizeBlockRequest.
 * Use `create(ListenFinalizeBlockRequestSchema)` to create a new message.
 */
export const ListenFinalizeBlockRequestSchema: GenMessage<ListenFinalizeBlockRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_store_streaming_abci_grpc, 0);

/**
 * ListenEndBlockResponse is the response type for the ListenEndBlock RPC method
 *
 * @generated from message cosmos.store.streaming.abci.ListenFinalizeBlockResponse
 */
export type ListenFinalizeBlockResponse = Message<"cosmos.store.streaming.abci.ListenFinalizeBlockResponse"> & {
};

/**
 * Describes the message cosmos.store.streaming.abci.ListenFinalizeBlockResponse.
 * Use `create(ListenFinalizeBlockResponseSchema)` to create a new message.
 */
export const ListenFinalizeBlockResponseSchema: GenMessage<ListenFinalizeBlockResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_store_streaming_abci_grpc, 1);

/**
 * ListenCommitRequest is the request type for the ListenCommit RPC method
 *
 * @generated from message cosmos.store.streaming.abci.ListenCommitRequest
 */
export type ListenCommitRequest = Message<"cosmos.store.streaming.abci.ListenCommitRequest"> & {
  /**
   * explicitly pass in block height as ResponseCommit does not contain this info
   *
   * @generated from field: int64 block_height = 1;
   */
  blockHeight: bigint;

  /**
   * @generated from field: tendermint.abci.ResponseCommit res = 2;
   */
  res?: ResponseCommit;

  /**
   * @generated from field: repeated cosmos.store.v1beta1.StoreKVPair change_set = 3;
   */
  changeSet: StoreKVPair[];
};

/**
 * Describes the message cosmos.store.streaming.abci.ListenCommitRequest.
 * Use `create(ListenCommitRequestSchema)` to create a new message.
 */
export const ListenCommitRequestSchema: GenMessage<ListenCommitRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_store_streaming_abci_grpc, 2);

/**
 * ListenCommitResponse is the response type for the ListenCommit RPC method
 *
 * @generated from message cosmos.store.streaming.abci.ListenCommitResponse
 */
export type ListenCommitResponse = Message<"cosmos.store.streaming.abci.ListenCommitResponse"> & {
};

/**
 * Describes the message cosmos.store.streaming.abci.ListenCommitResponse.
 * Use `create(ListenCommitResponseSchema)` to create a new message.
 */
export const ListenCommitResponseSchema: GenMessage<ListenCommitResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_store_streaming_abci_grpc, 3);

/**
 * ABCIListenerService is the service for the BaseApp ABCIListener interface
 *
 * @generated from service cosmos.store.streaming.abci.ABCIListenerService
 */
export const ABCIListenerService: GenService<{
  /**
   * ListenFinalizeBlock is the corresponding endpoint for ABCIListener.ListenEndBlock
   *
   * @generated from rpc cosmos.store.streaming.abci.ABCIListenerService.ListenFinalizeBlock
   */
  listenFinalizeBlock: {
    methodKind: "unary";
    input: typeof ListenFinalizeBlockRequestSchema;
    output: typeof ListenFinalizeBlockResponseSchema;
  },
  /**
   * ListenCommit is the corresponding endpoint for ABCIListener.ListenCommit
   *
   * @generated from rpc cosmos.store.streaming.abci.ABCIListenerService.ListenCommit
   */
  listenCommit: {
    methodKind: "unary";
    input: typeof ListenCommitRequestSchema;
    output: typeof ListenCommitResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_cosmos_store_streaming_abci_grpc, 0);

